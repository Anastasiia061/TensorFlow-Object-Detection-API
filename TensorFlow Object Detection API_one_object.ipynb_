{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":" \"10.10_object_one.ipynb\"","provenance":[{"file_id":"1gOFaA1kf-lxAh7-v6-QetMIDf5NRx7FY","timestamp":1594463737498}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.1"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"colab_type":"text","id":"ddfo42JUxiv2"},"source":["\n","# TensorFlow Object Detection: Подготовка данных для обучения\n","\n","https://github.com/tensorflow/models/tree/master/research/object_detection"]},{"cell_type":"markdown","metadata":{"id":"BNXSkTUskE2G","colab_type":"text"},"source":["### Монтирование Google Drive\n","Для данного демо нам понадобятся несколько ноутбуков, которые должны работать с одними и теме же данными. Поэтому, чтобы все ноутбуки имели доступ к нужным данным, нам будет необходимо подключить диск Google Drive и сохранять все данные на нём (включая данные, скачанные из интернета).\n","\n","Для монтирования диска нужно выполнить данный блок, перейти по ссылке, получить код, скопировать его в поле ниже (в этом блоке) и нажать Enter\n","\n","После монтирования диск будет находиться здесь: `/content/drive/My Drive`"]},{"cell_type":"code","metadata":{"id":"HAsG6Dc8kuQk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"executionInfo":{"status":"ok","timestamp":1594750990852,"user_tz":-180,"elapsed":752,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"5e02e590-0a96-4576-da92-fbe42769dac8"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xnnmVH__kx5B","colab_type":"text"},"source":["### Рабочая директория\n","Все данные будем хранить в директории `/content/drive/My Drive/tf_od_demo` (TensorFlow Object Detection Demo)\n","\n","При первом запуске создадим директорию (если её еще не существует), в противном случае надо заменить True на False.\n","\n","При последующих подключениях к диску (в том числе в других ноутбуках) директорию создавать не надо, в ней уже будут сохранены все данные, которые мы туда поместили."]},{"cell_type":"code","metadata":{"id":"khoZUcm6lrbu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594750999699,"user_tz":-180,"elapsed":1067,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"6cc457cb-09de-4a05-8c7a-eab31df95743"},"source":["if False:\n","    !mkdir \"/content/drive/My Drive/tf_od_demo\"\n","%cd \"/content/drive/My Drive/tf_od_demo\""],"execution_count":2,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/tf_od_demo\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kk53xwHtalrN","colab_type":"text"},"source":["### Подготовка библиотеки `object_detection`\n","Библиотека `object_detection` находится в репозитории `tensorflow/models` в разделе `research`\n","\n","Необходимо склонировать код библиотеки и сконфигурировать модели (сбилдить прото модели).\n","\n","Этот шаг нужно сделать один раз (не повторять, если папка `models` уже находится в текущей директории).\n","\n","Подробнее: https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md"]},{"cell_type":"code","metadata":{"id":"LPueN9mCBpHy","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":425},"executionInfo":{"status":"ok","timestamp":1594711704775,"user_tz":-180,"elapsed":84723,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"96ac5091-b4ff-46bb-d949-477cf7cea12b"},"source":["if True:\n","  \n","    !git clone https://github.com/tensorflow/models\n","    !cd models/research && protoc object_detection/protos/*.proto --python_out=.\n","    !cd models/research && export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim && python object_detection/builders/model_builder_test.py"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Cloning into 'models'...\n","remote: Enumerating objects: 32, done.\u001b[K\n","remote: Counting objects: 100% (32/32), done.\u001b[K\n","remote: Compressing objects: 100% (32/32), done.\u001b[K\n","remote: Total 38740 (delta 13), reused 19 (delta 0), pack-reused 38708\u001b[K\n","Receiving objects: 100% (38740/38740), 546.75 MiB | 14.49 MiB/s, done.\n","Resolving deltas: 100% (25967/25967), done.\n","Checking out files: 100% (2681/2681), done.\n","object_detection/protos/input_reader.proto: warning: Import object_detection/protos/image_resizer.proto but not used.\n","2020-07-14 07:28:21.664544: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","Traceback (most recent call last):\n","  File \"object_detection/builders/model_builder_test.py\", line 21, in <module>\n","    from object_detection.builders import model_builder\n","  File \"/content/drive/My Drive/tf_od_demo/models/research/object_detection/builders/model_builder.py\", line 20, in <module>\n","    from object_detection.builders import anchor_generator_builder\n","  File \"/content/drive/My Drive/tf_od_demo/models/research/object_detection/builders/anchor_generator_builder.py\", line 23, in <module>\n","    from object_detection.anchor_generators import flexible_grid_anchor_generator\n","  File \"/content/drive/My Drive/tf_od_demo/models/research/object_detection/anchor_generators/flexible_grid_anchor_generator.py\", line 19, in <module>\n","    from object_detection.anchor_generators import grid_anchor_generator\n","  File \"/content/drive/My Drive/tf_od_demo/models/research/object_detection/anchor_generators/grid_anchor_generator.py\", line 27, in <module>\n","    from object_detection.utils import ops\n","  File \"/content/drive/My Drive/tf_od_demo/models/research/object_detection/utils/ops.py\", line 28, in <module>\n","    import tf_slim as slim\n","ModuleNotFoundError: No module named 'tf_slim'\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"RFCMljCEx9VW"},"source":["### Загрузка библиотек\n","Загрузка TensorFlow и других библиотек. Кроме того, загрузка модуля `dataset_util` из пакета `object_detection`, который будет нужен для создания датасета в нужном формате."]},{"cell_type":"code","metadata":{"id":"9FV_Uxc2c8Tn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594751010250,"user_tz":-180,"elapsed":725,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"601441e0-fda9-4d45-f7b2-c69f68e7e8ba"},"source":["%tensorflow_version 1.x"],"execution_count":3,"outputs":[{"output_type":"stream","text":["TensorFlow 1.x selected.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"g52zrXqtKe0d","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1594751017968,"user_tz":-180,"elapsed":5922,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"3035754a-5903-4bd6-ae65-3389ef87ec77"},"source":["!pip install tf_slim"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: tf_slim in /usr/local/lib/python3.6/dist-packages (1.1.0)\n","Requirement already satisfied: absl-py>=0.2.2 in /usr/local/lib/python3.6/dist-packages (from tf_slim) (0.9.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from absl-py>=0.2.2->tf_slim) (1.12.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Ap8LDFHSYrEb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1594751023626,"user_tz":-180,"elapsed":4394,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"3c7c506e-dba2-49f5-e343-5f0611e99a7b"},"source":["!pip install object_detection"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: object_detection in /usr/local/lib/python3.6/dist-packages (0.0.3)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.6/dist-packages (from object_detection) (7.0.0)\n","Requirement already satisfied: Cython in /usr/local/lib/python3.6/dist-packages (from object_detection) (0.29.21)\n","Requirement already satisfied: jupyter in /usr/local/lib/python3.6/dist-packages (from object_detection) (1.0.0)\n","Requirement already satisfied: tensorflow in /tensorflow-1.15.2/python3.6 (from object_detection) (1.15.2)\n","Requirement already satisfied: contextlib2 in /usr/local/lib/python3.6/dist-packages (from object_detection) (0.5.5)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from object_detection) (3.2.2)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.6/dist-packages (from object_detection) (4.2.6)\n","Requirement already satisfied: qtconsole in /usr/local/lib/python3.6/dist-packages (from jupyter->object_detection) (4.7.5)\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.6/dist-packages (from jupyter->object_detection) (7.5.1)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.6/dist-packages (from jupyter->object_detection) (5.6.1)\n","Requirement already satisfied: jupyter-console in /usr/local/lib/python3.6/dist-packages (from jupyter->object_detection) (5.2.0)\n","Requirement already satisfied: ipykernel in /usr/local/lib/python3.6/dist-packages (from jupyter->object_detection) (4.10.1)\n","Requirement already satisfied: notebook in /usr/local/lib/python3.6/dist-packages (from jupyter->object_detection) (5.2.2)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.12.0)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.12.1)\n","Requirement already satisfied: wheel>=0.26; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (0.34.2)\n","Requirement already satisfied: keras-applications>=1.0.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.0.8)\n","Requirement already satisfied: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.18.5)\n","Requirement already satisfied: tensorflow-estimator==1.15.1 in /tensorflow-1.15.2/python3.6 (from tensorflow->object_detection) (1.15.1)\n","Requirement already satisfied: protobuf>=3.6.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (3.10.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.1.0)\n","Requirement already satisfied: tensorboard<1.16.0,>=1.15.0 in /tensorflow-1.15.2/python3.6 (from tensorflow->object_detection) (1.15.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (3.2.1)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.30.0)\n","Requirement already satisfied: gast==0.2.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (0.2.2)\n","Requirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (1.1.2)\n","Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (0.8.1)\n","Requirement already satisfied: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (0.9.0)\n","Requirement already satisfied: google-pasta>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow->object_detection) (0.2.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object_detection) (2.4.7)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object_detection) (2.8.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object_detection) (0.10.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object_detection) (1.2.0)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (0.2.0)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (2.1.3)\n","Requirement already satisfied: qtpy in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (1.9.0)\n","Requirement already satisfied: jupyter-client>=4.1 in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (5.3.5)\n","Requirement already satisfied: jupyter-core in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (4.6.3)\n","Requirement already satisfied: pyzmq>=17.1 in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (19.0.1)\n","Requirement already satisfied: traitlets in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->object_detection) (4.3.3)\n","Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.6/dist-packages (from ipywidgets->jupyter->object_detection) (5.0.7)\n","Requirement already satisfied: ipython>=4.0.0; python_version >= \"3.3\" in /usr/local/lib/python3.6/dist-packages (from ipywidgets->jupyter->object_detection) (5.5.0)\n","Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.6/dist-packages (from ipywidgets->jupyter->object_detection) (3.5.1)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (0.6.0)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (0.4.4)\n","Requirement already satisfied: jinja2>=2.4 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (2.11.2)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (0.3)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (0.8.4)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (1.4.2)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->object_detection) (3.1.5)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.0 in /usr/local/lib/python3.6/dist-packages (from jupyter-console->jupyter->object_detection) (1.0.18)\n","Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.6/dist-packages (from ipykernel->jupyter->object_detection) (4.5.3)\n","Requirement already satisfied: terminado>=0.3.3; sys_platform != \"win32\" in /usr/local/lib/python3.6/dist-packages (from notebook->jupyter->object_detection) (0.8.3)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras-applications>=1.0.8->tensorflow->object_detection) (2.10.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.6.1->tensorflow->object_detection) (49.1.0)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<1.16.0,>=1.15.0->tensorflow->object_detection) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<1.16.0,>=1.15.0->tensorflow->object_detection) (3.2.2)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.6/dist-packages (from traitlets->qtconsole->jupyter->object_detection) (4.4.2)\n","Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.6/dist-packages (from nbformat>=4.2.0->ipywidgets->jupyter->object_detection) (2.6.0)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.6/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets->jupyter->object_detection) (0.8.1)\n","Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.6/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets->jupyter->object_detection) (4.8.0)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.6/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets->jupyter->object_detection) (0.7.5)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from jinja2>=2.4->nbconvert->jupyter->object_detection) (1.1.1)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.6/dist-packages (from bleach->nbconvert->jupyter->object_detection) (0.5.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from bleach->nbconvert->jupyter->object_detection) (20.4)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.6/dist-packages (from prompt-toolkit<2.0.0,>=1.0.0->jupyter-console->jupyter->object_detection) (0.2.5)\n","Requirement already satisfied: ptyprocess; os_name != \"nt\" in /usr/local/lib/python3.6/dist-packages (from terminado>=0.3.3; sys_platform != \"win32\"->notebook->jupyter->object_detection) (0.6.0)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard<1.16.0,>=1.15.0->tensorflow->object_detection) (1.7.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard<1.16.0,>=1.15.0->tensorflow->object_detection) (3.1.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"jH8kQ2q30B03","colab":{},"executionInfo":{"status":"ok","timestamp":1594751036852,"user_tz":-180,"elapsed":6103,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["import numpy as np\n","from matplotlib import pyplot as plt\n","import imageio\n","\n","import tensorflow as tf\n","\n","import sys\n","sys.path.insert(0, 'models/research')\n","\n","from object_detection.utils import ops as utils_ops\n","from object_detection.utils import label_map_util\n","from object_detection.utils import visualization_utils as vis_util"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hZmalcqDcwWG","colab_type":"text"},"source":["### Функция для создания одного обучающего образца\n","В этой функции создаётся экземпляр класса `tf.train.Example`, который соответствует одной обучающей картике. Ей могут соответствовать несколько ground-truth баундинг боксов. Однако, конкретно в данном примере на картинке есть строго один бокс. В противном случае списки `xmins`, `xmaxs`, `ymins`, `ymaxs`, `classes_text`, `classes` должны иметь соответствующее количество элементов ( = кол-ву боксов на данной картинке).\n","\n","Создавать экземпляры класса `tf.train.Example` можно произвольным способом. В данном примере на вход в функцию подаётся строка из CSV файла (`annot.csv`). Главное -- заполнить соовтестсвующие поля словаре `feature={...}`\n","\n","Подробнее: https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/using_your_own_dataset.md"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"Dvz1hSw70OyQ","colab":{},"executionInfo":{"status":"ok","timestamp":1594751084429,"user_tz":-180,"elapsed":5715,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["def create_tf_example(example):\n","  \n","    img_fpath = os.path.join('data_one', example.id)\n","    img = Image.open(img_fpath)\n","    height = img.size[1]\n","    width = img.size[0]\n","    filename = str.encode(example.id)\n","    with open(img_fpath, mode='rb') as f:\n","        encoded_image_data = f.read()\n","    image_format = b'jpeg'\n","\n","    # List of normalized left x coordinates in bounding box (1 per box)\n","    xmins = [example.xmin / float(width)] \n","    # List of normalized right x coordinates in bounding box # (1 per box)\n","    xmaxs = [example.xmax / float(width)] \n","    # List of normalized top y coordinates in bounding box (1 per box)\n","    ymins = [example.ymin / float(height)] \n","    # List of normalized bottom y coordinates in bounding box # (1 per box)\n","    ymaxs = [example.ymax / float(height)] \n","    # List of string class name of bounding box (1 per box)\n","    classes_text = [b'Box']\n","    # List of integer class id of bounding box (1 per box)\n","    classes = [1]\n","\n","    tf_example = tf.train.Example(features=tf.train.Features(feature={\n","        'image/height': dataset_util.int64_feature(height),\n","        'image/width': dataset_util.int64_feature(width),\n","        'image/filename': dataset_util.bytes_feature(filename),\n","        'image/source_id': dataset_util.bytes_feature(filename),\n","        'image/encoded': dataset_util.bytes_feature(encoded_image_data),\n","        'image/format': dataset_util.bytes_feature(image_format),\n","        'image/object/bbox/xmin': dataset_util.float_list_feature(xmins),\n","        'image/object/bbox/xmax': dataset_util.float_list_feature(xmaxs),\n","        'image/object/bbox/ymin': dataset_util.float_list_feature(ymins),\n","        'image/object/bbox/ymax': dataset_util.float_list_feature(ymaxs),\n","        'image/object/class/text': dataset_util.bytes_list_feature(classes_text),\n","        'image/object/class/label': dataset_util.int64_list_feature(classes),\n","    }))\n","    return tf_example"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ow1NNywGecQ2","colab_type":"text"},"source":["### Чтение CSV файла с разметкой\n","В данном файле представлена разметка обучающих изображений. Сам файл и его формат показаны лишь для примера, они никак не связаны с библиотекой `object_detection`. Наша финальная цель -- создать датасет в формате `TFRecord`, состоящий из экземпляров `tf.train.Example`.\n","\n","---\n","\n","В данном примере формат файла annot.csv следующий (один бокс на файл):\n","\n","id,xmin,ymin,xmax,ymax\n","\n","1.jpg,261,260,601,615\n","\n","2.jpg,130,429,401,734\n","\n","...\n","\n","---\n","\n","Перед запуском этого блока загрузите необходимые данные (папка `my_data`) в текущую рабочую директорию (tf_od_demo). "]},{"cell_type":"code","metadata":{"colab_type":"code","id":"YpwJXq1SYy7S","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1594751051571,"user_tz":-180,"elapsed":1393,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"bccdf795-cbea-4123-c7f9-e3151ebc8ad7"},"source":["import pandas as pd\n","annot = pd.read_csv('data_one/annot_one.csv')\n","annot.head()"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>xmin</th>\n","      <th>ymin</th>\n","      <th>xmax</th>\n","      <th>ymax</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>IMG_7712.jpg</td>\n","      <td>261</td>\n","      <td>236</td>\n","      <td>622</td>\n","      <td>569</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>IMG_7713.jpg</td>\n","      <td>100</td>\n","      <td>242</td>\n","      <td>474</td>\n","      <td>570</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>IMG_7714.jpg</td>\n","      <td>121</td>\n","      <td>265</td>\n","      <td>499</td>\n","      <td>599</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>IMG_7715.jpg</td>\n","      <td>111</td>\n","      <td>285</td>\n","      <td>459</td>\n","      <td>610</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>IMG_7716.jpg</td>\n","      <td>65</td>\n","      <td>329</td>\n","      <td>360</td>\n","      <td>620</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             id  xmin  ymin  xmax  ymax\n","0  IMG_7712.jpg   261   236   622   569\n","1  IMG_7713.jpg   100   242   474   570\n","2  IMG_7714.jpg   121   265   499   599\n","3  IMG_7715.jpg   111   285   459   610\n","4  IMG_7716.jpg    65   329   360   620"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"90HTWYRmhRrP","colab_type":"text"},"source":["### Создание TFRecord\n","Здесь мы создаём финальный датасет в формате `TFRecord`, который необходим для запуска обучения TF Object Detection. \n","\n","В цикле по всем обучающим образцам создаем `TF Example` и записываем его в `TF Record`."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"ReFXnPuwZLoB","colab":{},"executionInfo":{"status":"ok","timestamp":1594753270097,"user_tz":-180,"elapsed":1285,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["import os\n","from PIL import Image\n","from object_detection.utils import dataset_util\n","writer = tf.python_io.TFRecordWriter('data_one/train_data.record')\n","\n","for idx, row in annot.iterrows():\n","    tf_example = create_tf_example(row)\n","    writer.write(tf_example.SerializeToString())\n","\n","writer.close()"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"kz8DJ6XSy0Lf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1594711778606,"user_tz":-180,"elapsed":6284,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"0079d6a0-0dbe-45da-ed93-f5c9e80d6058"},"source":["if True:\n","    !wget http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_2018_01_28.tar.gz\n","    !tar -xzf ssd_mobilenet_v1_coco_2018_01_28.tar.gz"],"execution_count":null,"outputs":[{"output_type":"stream","text":["--2020-07-14 07:29:33--  http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_2018_01_28.tar.gz\n","Resolving download.tensorflow.org (download.tensorflow.org)... 172.217.204.128, 2607:f8b0:400c:c0b::80\n","Connecting to download.tensorflow.org (download.tensorflow.org)|172.217.204.128|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 76541073 (73M) [application/x-tar]\n","Saving to: ‘ssd_mobilenet_v1_coco_2018_01_28.tar.gz’\n","\n","ssd_mobilenet_v1_co 100%[===================>]  73.00M  49.8MB/s    in 1.5s    \n","\n","2020-07-14 07:29:34 (49.8 MB/s) - ‘ssd_mobilenet_v1_coco_2018_01_28.tar.gz’ saved [76541073/76541073]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4Bl1CWfDr7QF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1594759068536,"user_tz":-180,"elapsed":1901957,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"4d7b01d5-78c4-4c13-a6ff-d21384b3534a"},"source":["%%time\n","\n","if False:\n","    # Delete output directory\n","    !rm -rf data_one//output\n","\n","!export PYTHONPATH=$PYTHONPATH:models/research:models/research/slim ; python models/research/object_detection/model_main.py \\\n","    --pipeline_config_path=data_one/pipeline.config \\\n","    --model_dir=data_one/output \\\n","    --num_train_steps=16000 \\\n","    --alsologtostderr"],"execution_count":52,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:Forced number of epochs for all eval validations to be 1.\n","W0714 20:06:08.816971 139841818478464 model_lib.py:758] Forced number of epochs for all eval validations to be 1.\n","INFO:tensorflow:Maybe overwriting train_steps: 16000\n","I0714 20:06:08.817322 139841818478464 config_util.py:552] Maybe overwriting train_steps: 16000\n","INFO:tensorflow:Maybe overwriting use_bfloat16: False\n","I0714 20:06:08.817489 139841818478464 config_util.py:552] Maybe overwriting use_bfloat16: False\n","INFO:tensorflow:Maybe overwriting sample_1_of_n_eval_examples: 1\n","I0714 20:06:08.817635 139841818478464 config_util.py:552] Maybe overwriting sample_1_of_n_eval_examples: 1\n","INFO:tensorflow:Maybe overwriting eval_num_epochs: 1\n","I0714 20:06:08.817785 139841818478464 config_util.py:552] Maybe overwriting eval_num_epochs: 1\n","WARNING:tensorflow:Expected number of evaluation epochs is 1, but instead encountered `eval_on_train_input_config.num_epochs` = 0. Overwriting `num_epochs` to 1.\n","W0714 20:06:08.817965 139841818478464 model_lib.py:774] Expected number of evaluation epochs is 1, but instead encountered `eval_on_train_input_config.num_epochs` = 0. Overwriting `num_epochs` to 1.\n","INFO:tensorflow:create_estimator_and_inputs: use_tpu False, export_to_tpu None\n","I0714 20:06:08.818149 139841818478464 model_lib.py:809] create_estimator_and_inputs: use_tpu False, export_to_tpu None\n","INFO:tensorflow:Using config: {'_model_dir': 'data_one/output', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': allow_soft_placement: true\n","graph_options {\n","  rewrite_options {\n","    meta_optimizer_iterations: ONE\n","  }\n","}\n",", '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f2f0d3cbe10>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\n","I0714 20:06:08.818662 139841818478464 estimator.py:212] Using config: {'_model_dir': 'data_one/output', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': allow_soft_placement: true\n","graph_options {\n","  rewrite_options {\n","    meta_optimizer_iterations: ONE\n","  }\n","}\n",", '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f2f0d3cbe10>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\n","WARNING:tensorflow:Estimator's model_fn (<function create_model_fn.<locals>.model_fn at 0x7f2f0d3d2378>) includes params argument, but params are not passed to Estimator.\n","W0714 20:06:08.819543 139841818478464 model_fn.py:630] Estimator's model_fn (<function create_model_fn.<locals>.model_fn at 0x7f2f0d3d2378>) includes params argument, but params are not passed to Estimator.\n","INFO:tensorflow:Not using Distribute Coordinator.\n","I0714 20:06:08.820303 139841818478464 estimator_training.py:186] Not using Distribute Coordinator.\n","INFO:tensorflow:Running training and evaluation locally (non-distributed).\n","I0714 20:06:08.820558 139841818478464 training.py:612] Running training and evaluation locally (non-distributed).\n","INFO:tensorflow:Start train and evaluate loop. The evaluate will happen after every checkpoint. Checkpoint frequency is determined based on RunConfig arguments: save_checkpoints_steps None or save_checkpoints_secs 600.\n","I0714 20:06:08.820898 139841818478464 training.py:700] Start train and evaluate loop. The evaluate will happen after every checkpoint. Checkpoint frequency is determined based on RunConfig arguments: save_checkpoints_steps None or save_checkpoints_secs 600.\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/training/training_util.py:236: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.\n","W0714 20:06:08.828014 139841818478464 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/training/training_util.py:236: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.\n","WARNING:tensorflow:num_readers has been reduced to 1 to match input file shards.\n","W0714 20:06:08.875236 139841818478464 dataset_builder.py:83] num_readers has been reduced to 1 to match input file shards.\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/builders/dataset_builder.py:100: parallel_interleave (from tensorflow.python.data.experimental.ops.interleave_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.interleave(map_func, cycle_length, block_length, num_parallel_calls=tf.data.experimental.AUTOTUNE)` instead. If sloppy execution is desired, use `tf.data.Options.experimental_determinstic`.\n","W0714 20:06:08.881806 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/builders/dataset_builder.py:100: parallel_interleave (from tensorflow.python.data.experimental.ops.interleave_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.interleave(map_func, cycle_length, block_length, num_parallel_calls=tf.data.experimental.AUTOTUNE)` instead. If sloppy execution is desired, use `tf.data.Options.experimental_determinstic`.\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/builders/dataset_builder.py:175: DatasetV1.map_with_legacy_function (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.map()\n","W0714 20:06:08.906579 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/builders/dataset_builder.py:175: DatasetV1.map_with_legacy_function (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.map()\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/inputs.py:77: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.\n","W0714 20:06:23.011813 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/inputs.py:77: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/utils/ops.py:493: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","W0714 20:06:23.139269 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/utils/ops.py:493: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/autograph/operators/control_flow.py:1004: sample_distorted_bounding_box (from tensorflow.python.ops.image_ops_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","`seed2` arg is deprecated.Use sample_distorted_bounding_box_v2 instead.\n","W0714 20:06:31.045653 139841818478464 api.py:332] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/autograph/operators/control_flow.py:1004: sample_distorted_bounding_box (from tensorflow.python.ops.image_ops_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","`seed2` arg is deprecated.Use sample_distorted_bounding_box_v2 instead.\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/inputs.py:259: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.cast` instead.\n","W0714 20:06:35.603128 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/inputs.py:259: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.cast` instead.\n","INFO:tensorflow:Calling model_fn.\n","I0714 20:06:39.820519 139841818478464 estimator.py:1148] Calling model_fn.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tf_slim/layers/layers.py:1089: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `layer.__call__` method instead.\n","W0714 20:06:39.913219 139841818478464 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tf_slim/layers/layers.py:1089: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `layer.__call__` method instead.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:06:42.051342 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:06:42.088581 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:06:42.126173 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:06:42.162384 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:06:42.198113 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:06:42.233201 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/training/rmsprop.py:119: calling Ones.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Call initializer instance with the dtype argument instead of passing it to the constructor\n","W0714 20:06:44.757537 139841818478464 deprecation.py:506] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/training/rmsprop.py:119: calling Ones.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Call initializer instance with the dtype argument instead of passing it to the constructor\n","INFO:tensorflow:Done calling model_fn.\n","I0714 20:06:49.685180 139841818478464 estimator.py:1150] Done calling model_fn.\n","INFO:tensorflow:Create CheckpointSaverHook.\n","I0714 20:06:49.686791 139841818478464 basic_session_run_hooks.py:541] Create CheckpointSaverHook.\n","INFO:tensorflow:Graph was finalized.\n","I0714 20:06:52.269161 139841818478464 monitored_session.py:240] Graph was finalized.\n","2020-07-14 20:06:52.274824: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2300000000 Hz\n","2020-07-14 20:06:52.275127: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x106fc680 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\n","2020-07-14 20:06:52.275179: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\n","2020-07-14 20:06:52.277416: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1\n","2020-07-14 20:06:52.323175: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:06:52.323792: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x106fc4c0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n","2020-07-14 20:06:52.323829: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla K80, Compute Capability 3.7\n","2020-07-14 20:06:52.324116: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:06:52.324617: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:06:52.325017: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:06:52.326602: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:06:52.328448: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:06:52.328828: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:06:52.330493: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:06:52.331303: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:06:52.334894: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:06:52.335069: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:06:52.335646: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:06:52.336262: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:06:52.336333: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:06:52.337761: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:06:52.337793: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:06:52.337809: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:06:52.338013: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:06:52.338606: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:06:52.339112: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\n","2020-07-14 20:06:52.339159: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Running local_init_op.\n","I0714 20:06:55.279702 139841818478464 session_manager.py:500] Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","I0714 20:06:55.512229 139841818478464 session_manager.py:502] Done running local_init_op.\n","INFO:tensorflow:Saving checkpoints for 0 into data_one/output/model.ckpt.\n","I0714 20:07:02.073181 139841818478464 basic_session_run_hooks.py:606] Saving checkpoints for 0 into data_one/output/model.ckpt.\n","2020-07-14 20:07:08.333515: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:07:09.482994: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","INFO:tensorflow:loss = 13.726079, step = 0\n","I0714 20:07:11.490618 139841818478464 basic_session_run_hooks.py:262] loss = 13.726079, step = 0\n","INFO:tensorflow:global_step/sec: 7.25488\n","I0714 20:07:25.273586 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 7.25488\n","INFO:tensorflow:loss = 10.139688, step = 100 (13.784 sec)\n","I0714 20:07:25.274881 139841818478464 basic_session_run_hooks.py:260] loss = 10.139688, step = 100 (13.784 sec)\n","INFO:tensorflow:global_step/sec: 9.14787\n","I0714 20:07:36.205085 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.14787\n","INFO:tensorflow:loss = 11.119503, step = 200 (10.932 sec)\n","I0714 20:07:36.206513 139841818478464 basic_session_run_hooks.py:260] loss = 11.119503, step = 200 (10.932 sec)\n","INFO:tensorflow:global_step/sec: 9.07431\n","I0714 20:07:47.225255 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.07431\n","INFO:tensorflow:loss = 8.803118, step = 300 (11.020 sec)\n","I0714 20:07:47.226542 139841818478464 basic_session_run_hooks.py:260] loss = 8.803118, step = 300 (11.020 sec)\n","INFO:tensorflow:global_step/sec: 8.95601\n","I0714 20:07:58.390984 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.95601\n","INFO:tensorflow:loss = 7.844576, step = 400 (11.166 sec)\n","I0714 20:07:58.392119 139841818478464 basic_session_run_hooks.py:260] loss = 7.844576, step = 400 (11.166 sec)\n","INFO:tensorflow:global_step/sec: 8.92103\n","I0714 20:08:09.600333 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.92103\n","INFO:tensorflow:loss = 7.038796, step = 500 (11.209 sec)\n","I0714 20:08:09.601560 139841818478464 basic_session_run_hooks.py:260] loss = 7.038796, step = 500 (11.209 sec)\n","INFO:tensorflow:global_step/sec: 8.85313\n","I0714 20:08:20.895795 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.85313\n","INFO:tensorflow:loss = 5.4162006, step = 600 (11.295 sec)\n","I0714 20:08:20.897032 139841818478464 basic_session_run_hooks.py:260] loss = 5.4162006, step = 600 (11.295 sec)\n","INFO:tensorflow:global_step/sec: 8.9249\n","I0714 20:08:32.100404 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.9249\n","INFO:tensorflow:loss = 6.888528, step = 700 (11.204 sec)\n","I0714 20:08:32.101386 139841818478464 basic_session_run_hooks.py:260] loss = 6.888528, step = 700 (11.204 sec)\n","INFO:tensorflow:global_step/sec: 9.01347\n","I0714 20:08:43.194975 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.01347\n","INFO:tensorflow:loss = 5.9405375, step = 800 (11.095 sec)\n","I0714 20:08:43.196315 139841818478464 basic_session_run_hooks.py:260] loss = 5.9405375, step = 800 (11.095 sec)\n","INFO:tensorflow:global_step/sec: 9.02667\n","I0714 20:08:54.273294 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.02667\n","INFO:tensorflow:loss = 10.321265, step = 900 (11.078 sec)\n","I0714 20:08:54.274802 139841818478464 basic_session_run_hooks.py:260] loss = 10.321265, step = 900 (11.078 sec)\n","INFO:tensorflow:global_step/sec: 8.98701\n","I0714 20:09:05.400352 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.98701\n","INFO:tensorflow:loss = 6.3111405, step = 1000 (11.127 sec)\n","I0714 20:09:05.401616 139841818478464 basic_session_run_hooks.py:260] loss = 6.3111405, step = 1000 (11.127 sec)\n","INFO:tensorflow:global_step/sec: 8.93029\n","I0714 20:09:16.598247 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.93029\n","INFO:tensorflow:loss = 6.427917, step = 1100 (11.198 sec)\n","I0714 20:09:16.599631 139841818478464 basic_session_run_hooks.py:260] loss = 6.427917, step = 1100 (11.198 sec)\n","INFO:tensorflow:global_step/sec: 8.95851\n","I0714 20:09:27.760773 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.95851\n","INFO:tensorflow:loss = 9.289379, step = 1200 (11.162 sec)\n","I0714 20:09:27.761757 139841818478464 basic_session_run_hooks.py:260] loss = 9.289379, step = 1200 (11.162 sec)\n","INFO:tensorflow:global_step/sec: 9.04001\n","I0714 20:09:38.822738 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.04001\n","INFO:tensorflow:loss = 5.148418, step = 1300 (11.062 sec)\n","I0714 20:09:38.823950 139841818478464 basic_session_run_hooks.py:260] loss = 5.148418, step = 1300 (11.062 sec)\n","INFO:tensorflow:global_step/sec: 8.97214\n","I0714 20:09:49.968362 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.97214\n","INFO:tensorflow:loss = 8.603674, step = 1400 (11.146 sec)\n","I0714 20:09:49.969555 139841818478464 basic_session_run_hooks.py:260] loss = 8.603674, step = 1400 (11.146 sec)\n","INFO:tensorflow:global_step/sec: 8.94846\n","I0714 20:10:01.143439 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.94846\n","INFO:tensorflow:loss = 7.959155, step = 1500 (11.175 sec)\n","I0714 20:10:01.144593 139841818478464 basic_session_run_hooks.py:260] loss = 7.959155, step = 1500 (11.175 sec)\n","INFO:tensorflow:global_step/sec: 8.86991\n","I0714 20:10:12.417554 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.86991\n","INFO:tensorflow:loss = 7.181912, step = 1600 (11.274 sec)\n","I0714 20:10:12.418822 139841818478464 basic_session_run_hooks.py:260] loss = 7.181912, step = 1600 (11.274 sec)\n","INFO:tensorflow:global_step/sec: 9.03639\n","I0714 20:10:23.483897 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.03639\n","INFO:tensorflow:loss = 4.5881176, step = 1700 (11.066 sec)\n","I0714 20:10:23.485136 139841818478464 basic_session_run_hooks.py:260] loss = 4.5881176, step = 1700 (11.066 sec)\n","INFO:tensorflow:global_step/sec: 9.07693\n","I0714 20:10:34.500842 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.07693\n","INFO:tensorflow:loss = 4.518892, step = 1800 (11.017 sec)\n","I0714 20:10:34.502128 139841818478464 basic_session_run_hooks.py:260] loss = 4.518892, step = 1800 (11.017 sec)\n","INFO:tensorflow:global_step/sec: 8.90613\n","I0714 20:10:45.729207 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.90613\n","INFO:tensorflow:loss = 6.0051475, step = 1900 (11.228 sec)\n","I0714 20:10:45.730586 139841818478464 basic_session_run_hooks.py:260] loss = 6.0051475, step = 1900 (11.228 sec)\n","INFO:tensorflow:global_step/sec: 8.82671\n","I0714 20:10:57.058352 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.82671\n","INFO:tensorflow:loss = 5.9376087, step = 2000 (11.330 sec)\n","I0714 20:10:57.060271 139841818478464 basic_session_run_hooks.py:260] loss = 5.9376087, step = 2000 (11.330 sec)\n","INFO:tensorflow:global_step/sec: 9.06246\n","I0714 20:11:08.092877 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.06246\n","INFO:tensorflow:loss = 5.6749687, step = 2100 (11.034 sec)\n","I0714 20:11:08.094187 139841818478464 basic_session_run_hooks.py:260] loss = 5.6749687, step = 2100 (11.034 sec)\n","INFO:tensorflow:global_step/sec: 8.97718\n","I0714 20:11:19.232213 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.97718\n","INFO:tensorflow:loss = 4.68743, step = 2200 (11.139 sec)\n","I0714 20:11:19.233536 139841818478464 basic_session_run_hooks.py:260] loss = 4.68743, step = 2200 (11.139 sec)\n","INFO:tensorflow:global_step/sec: 8.81982\n","I0714 20:11:30.570293 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.81982\n","INFO:tensorflow:loss = 3.6826665, step = 2300 (11.338 sec)\n","I0714 20:11:30.571552 139841818478464 basic_session_run_hooks.py:260] loss = 3.6826665, step = 2300 (11.338 sec)\n","INFO:tensorflow:global_step/sec: 9.13736\n","I0714 20:11:41.514371 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.13736\n","INFO:tensorflow:loss = 3.021961, step = 2400 (10.944 sec)\n","I0714 20:11:41.515443 139841818478464 basic_session_run_hooks.py:260] loss = 3.021961, step = 2400 (10.944 sec)\n","INFO:tensorflow:global_step/sec: 8.89416\n","I0714 20:11:52.757721 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.89416\n","INFO:tensorflow:loss = 4.3109694, step = 2500 (11.244 sec)\n","I0714 20:11:52.759142 139841818478464 basic_session_run_hooks.py:260] loss = 4.3109694, step = 2500 (11.244 sec)\n","INFO:tensorflow:global_step/sec: 8.87681\n","I0714 20:12:04.022993 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.87681\n","INFO:tensorflow:loss = 3.5802348, step = 2600 (11.265 sec)\n","I0714 20:12:04.024291 139841818478464 basic_session_run_hooks.py:260] loss = 3.5802348, step = 2600 (11.265 sec)\n","INFO:tensorflow:global_step/sec: 9.16465\n","I0714 20:12:14.934508 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.16465\n","INFO:tensorflow:loss = 4.777239, step = 2700 (10.911 sec)\n","I0714 20:12:14.935752 139841818478464 basic_session_run_hooks.py:260] loss = 4.777239, step = 2700 (10.911 sec)\n","INFO:tensorflow:global_step/sec: 9.13058\n","I0714 20:12:25.886717 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.13058\n","INFO:tensorflow:loss = 6.4388604, step = 2800 (10.952 sec)\n","I0714 20:12:25.888028 139841818478464 basic_session_run_hooks.py:260] loss = 6.4388604, step = 2800 (10.952 sec)\n","INFO:tensorflow:global_step/sec: 9.149\n","I0714 20:12:36.816859 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.149\n","INFO:tensorflow:loss = 4.544096, step = 2900 (10.930 sec)\n","I0714 20:12:36.818183 139841818478464 basic_session_run_hooks.py:260] loss = 4.544096, step = 2900 (10.930 sec)\n","INFO:tensorflow:global_step/sec: 9.10955\n","I0714 20:12:47.794361 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.10955\n","INFO:tensorflow:loss = 4.568113, step = 3000 (10.977 sec)\n","I0714 20:12:47.795366 139841818478464 basic_session_run_hooks.py:260] loss = 4.568113, step = 3000 (10.977 sec)\n","INFO:tensorflow:global_step/sec: 9.12006\n","I0714 20:12:58.759194 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.12006\n","INFO:tensorflow:loss = 6.800122, step = 3100 (10.966 sec)\n","I0714 20:12:58.761242 139841818478464 basic_session_run_hooks.py:260] loss = 6.800122, step = 3100 (10.966 sec)\n","INFO:tensorflow:global_step/sec: 9.1007\n","I0714 20:13:09.747340 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.1007\n","INFO:tensorflow:loss = 5.1043854, step = 3200 (10.987 sec)\n","I0714 20:13:09.748517 139841818478464 basic_session_run_hooks.py:260] loss = 5.1043854, step = 3200 (10.987 sec)\n","INFO:tensorflow:global_step/sec: 9.07185\n","I0714 20:13:20.770452 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.07185\n","INFO:tensorflow:loss = 5.0435047, step = 3300 (11.023 sec)\n","I0714 20:13:20.771792 139841818478464 basic_session_run_hooks.py:260] loss = 5.0435047, step = 3300 (11.023 sec)\n","INFO:tensorflow:global_step/sec: 9.05651\n","I0714 20:13:31.812269 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.05651\n","INFO:tensorflow:loss = 3.6430197, step = 3400 (11.042 sec)\n","I0714 20:13:31.813677 139841818478464 basic_session_run_hooks.py:260] loss = 3.6430197, step = 3400 (11.042 sec)\n","INFO:tensorflow:global_step/sec: 9.11483\n","I0714 20:13:42.783356 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11483\n","INFO:tensorflow:loss = 5.77316, step = 3500 (10.971 sec)\n","I0714 20:13:42.784579 139841818478464 basic_session_run_hooks.py:260] loss = 5.77316, step = 3500 (10.971 sec)\n","INFO:tensorflow:global_step/sec: 9.12998\n","I0714 20:13:53.736307 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.12998\n","INFO:tensorflow:loss = 3.8451505, step = 3600 (10.953 sec)\n","I0714 20:13:53.737879 139841818478464 basic_session_run_hooks.py:260] loss = 3.8451505, step = 3600 (10.953 sec)\n","INFO:tensorflow:global_step/sec: 9.01675\n","I0714 20:14:04.826739 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.01675\n","INFO:tensorflow:loss = 8.58773, step = 3700 (11.090 sec)\n","I0714 20:14:04.828199 139841818478464 basic_session_run_hooks.py:260] loss = 8.58773, step = 3700 (11.090 sec)\n","INFO:tensorflow:global_step/sec: 9.05526\n","I0714 20:14:15.870106 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.05526\n","INFO:tensorflow:loss = 3.7422166, step = 3800 (11.043 sec)\n","I0714 20:14:15.871301 139841818478464 basic_session_run_hooks.py:260] loss = 3.7422166, step = 3800 (11.043 sec)\n","INFO:tensorflow:global_step/sec: 9.1228\n","I0714 20:14:26.831607 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.1228\n","INFO:tensorflow:loss = 3.5454152, step = 3900 (10.962 sec)\n","I0714 20:14:26.832945 139841818478464 basic_session_run_hooks.py:260] loss = 3.5454152, step = 3900 (10.962 sec)\n","INFO:tensorflow:global_step/sec: 9.04978\n","I0714 20:14:37.881572 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.04978\n","INFO:tensorflow:loss = 5.4597564, step = 4000 (11.050 sec)\n","I0714 20:14:37.882914 139841818478464 basic_session_run_hooks.py:260] loss = 5.4597564, step = 4000 (11.050 sec)\n","INFO:tensorflow:global_step/sec: 9.09233\n","I0714 20:14:48.879894 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.09233\n","INFO:tensorflow:loss = 4.2952776, step = 4100 (10.998 sec)\n","I0714 20:14:48.881266 139841818478464 basic_session_run_hooks.py:260] loss = 4.2952776, step = 4100 (10.998 sec)\n","INFO:tensorflow:global_step/sec: 9.14669\n","I0714 20:14:59.812817 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.14669\n","INFO:tensorflow:loss = 3.1279974, step = 4200 (10.934 sec)\n","I0714 20:14:59.815169 139841818478464 basic_session_run_hooks.py:260] loss = 3.1279974, step = 4200 (10.934 sec)\n","INFO:tensorflow:global_step/sec: 9.19785\n","I0714 20:15:10.684885 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.19785\n","INFO:tensorflow:loss = 5.9531307, step = 4300 (10.871 sec)\n","I0714 20:15:10.686040 139841818478464 basic_session_run_hooks.py:260] loss = 5.9531307, step = 4300 (10.871 sec)\n","INFO:tensorflow:global_step/sec: 8.97906\n","I0714 20:15:21.821953 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.97906\n","INFO:tensorflow:loss = 4.547856, step = 4400 (11.137 sec)\n","I0714 20:15:21.823323 139841818478464 basic_session_run_hooks.py:260] loss = 4.547856, step = 4400 (11.137 sec)\n","INFO:tensorflow:global_step/sec: 9.09944\n","I0714 20:15:32.811682 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.09944\n","INFO:tensorflow:loss = 4.243597, step = 4500 (10.990 sec)\n","I0714 20:15:32.813153 139841818478464 basic_session_run_hooks.py:260] loss = 4.243597, step = 4500 (10.990 sec)\n","INFO:tensorflow:global_step/sec: 9.10931\n","I0714 20:15:43.789386 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.10931\n","INFO:tensorflow:loss = 4.124299, step = 4600 (10.978 sec)\n","I0714 20:15:43.790714 139841818478464 basic_session_run_hooks.py:260] loss = 4.124299, step = 4600 (10.978 sec)\n","INFO:tensorflow:global_step/sec: 9.16788\n","I0714 20:15:54.697184 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.16788\n","INFO:tensorflow:loss = 6.862374, step = 4700 (10.909 sec)\n","I0714 20:15:54.699375 139841818478464 basic_session_run_hooks.py:260] loss = 6.862374, step = 4700 (10.909 sec)\n","INFO:tensorflow:global_step/sec: 9.10631\n","I0714 20:16:05.678417 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.10631\n","INFO:tensorflow:loss = 3.3896637, step = 4800 (10.980 sec)\n","I0714 20:16:05.679775 139841818478464 basic_session_run_hooks.py:260] loss = 3.3896637, step = 4800 (10.980 sec)\n","INFO:tensorflow:global_step/sec: 9.16212\n","I0714 20:16:16.592941 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.16212\n","INFO:tensorflow:loss = 2.3822136, step = 4900 (10.914 sec)\n","I0714 20:16:16.594208 139841818478464 basic_session_run_hooks.py:260] loss = 2.3822136, step = 4900 (10.914 sec)\n","INFO:tensorflow:global_step/sec: 9.11222\n","I0714 20:16:27.567261 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11222\n","INFO:tensorflow:loss = 4.0219164, step = 5000 (10.974 sec)\n","I0714 20:16:27.568337 139841818478464 basic_session_run_hooks.py:260] loss = 4.0219164, step = 5000 (10.974 sec)\n","INFO:tensorflow:global_step/sec: 8.86178\n","I0714 20:16:38.851627 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.86178\n","INFO:tensorflow:loss = 3.4926813, step = 5100 (11.285 sec)\n","I0714 20:16:38.853102 139841818478464 basic_session_run_hooks.py:260] loss = 3.4926813, step = 5100 (11.285 sec)\n","INFO:tensorflow:global_step/sec: 8.91994\n","I0714 20:16:50.062456 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.91994\n","INFO:tensorflow:loss = 11.065292, step = 5200 (11.211 sec)\n","I0714 20:16:50.063758 139841818478464 basic_session_run_hooks.py:260] loss = 11.065292, step = 5200 (11.211 sec)\n","INFO:tensorflow:global_step/sec: 9.03798\n","I0714 20:17:01.126858 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.03798\n","INFO:tensorflow:loss = 3.8636537, step = 5300 (11.065 sec)\n","I0714 20:17:01.128967 139841818478464 basic_session_run_hooks.py:260] loss = 3.8636537, step = 5300 (11.065 sec)\n","INFO:tensorflow:Saving checkpoints for 5326 into data_one/output/model.ckpt.\n","I0714 20:17:03.897920 139841818478464 basic_session_run_hooks.py:606] Saving checkpoints for 5326 into data_one/output/model.ckpt.\n","INFO:tensorflow:Calling model_fn.\n","I0714 20:17:06.452551 139841818478464 estimator.py:1148] Calling model_fn.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:17:08.339252 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:17:08.376698 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:17:08.413717 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:17:08.450642 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:17:08.488479 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:17:08.526174 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/eval_util.py:855: to_int64 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.cast` instead.\n","W0714 20:17:09.601630 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/eval_util.py:855: to_int64 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.cast` instead.\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/utils/visualization_utils.py:618: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","tf.py_func is deprecated in TF V2. Instead, there are two\n","    options available in V2.\n","    - tf.py_function takes a python function which manipulates tf eager\n","    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to\n","    an ndarray (just call tensor.numpy()) but having access to eager tensors\n","    means `tf.py_function`s can use accelerators such as GPUs as well as\n","    being differentiable using a gradient tape.\n","    - tf.numpy_function maintains the semantics of the deprecated tf.py_func\n","    (it is not differentiable, and manipulates numpy arrays). It drops the\n","    stateful argument making all functions stateful.\n","    \n","W0714 20:17:09.861649 139841818478464 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/utils/visualization_utils.py:618: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","tf.py_func is deprecated in TF V2. Instead, there are two\n","    options available in V2.\n","    - tf.py_function takes a python function which manipulates tf eager\n","    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to\n","    an ndarray (just call tensor.numpy()) but having access to eager tensors\n","    means `tf.py_function`s can use accelerators such as GPUs as well as\n","    being differentiable using a gradient tape.\n","    - tf.numpy_function maintains the semantics of the deprecated tf.py_func\n","    (it is not differentiable, and manipulates numpy arrays). It drops the\n","    stateful argument making all functions stateful.\n","    \n","INFO:tensorflow:Done calling model_fn.\n","I0714 20:17:10.410904 139841818478464 estimator.py:1150] Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2020-07-14T20:17:10Z\n","I0714 20:17:10.431392 139841818478464 evaluation.py:255] Starting evaluation at 2020-07-14T20:17:10Z\n","INFO:tensorflow:Graph was finalized.\n","I0714 20:17:10.795882 139841818478464 monitored_session.py:240] Graph was finalized.\n","2020-07-14 20:17:10.797457: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:17:10.797778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:17:10.797887: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:17:10.797943: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:17:10.797995: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:17:10.798040: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:17:10.798112: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:17:10.798154: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:17:10.798198: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:17:10.798328: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:17:10.798773: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:17:10.799083: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:17:10.799251: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:17:10.799275: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:17:10.799290: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:17:10.799440: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:17:10.799798: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:17:10.800076: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-5326\n","I0714 20:17:10.802150 139841818478464 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-5326\n","INFO:tensorflow:Running local_init_op.\n","I0714 20:17:11.482466 139841818478464 session_manager.py:500] Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","I0714 20:17:11.586596 139841818478464 session_manager.py:502] Done running local_init_op.\n","INFO:tensorflow:Performing evaluation on 7 images.\n","I0714 20:17:14.280028 139838551262976 coco_evaluation.py:237] Performing evaluation on 7 images.\n","creating index...\n","index created!\n","INFO:tensorflow:Loading and preparing annotation results...\n","I0714 20:17:14.280905 139838551262976 coco_tools.py:116] Loading and preparing annotation results...\n","INFO:tensorflow:DONE (t=0.00s)\n","I0714 20:17:14.281965 139838551262976 coco_tools.py:138] DONE (t=0.00s)\n","creating index...\n","index created!\n","Running per image evaluation...\n","Evaluate annotation type *bbox*\n","DONE (t=0.11s).\n","Accumulating evaluation results...\n","DONE (t=0.01s).\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n"," Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n"," Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000\n","INFO:tensorflow:Finished evaluation at 2020-07-14-20:17:15\n","I0714 20:17:15.078435 139841818478464 evaluation.py:275] Finished evaluation at 2020-07-14-20:17:15\n","INFO:tensorflow:Saving dict for global step 5326: DetectionBoxes_Precision/mAP = 0.0, DetectionBoxes_Precision/mAP (large) = 0.0, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 0.0, DetectionBoxes_Precision/mAP@.75IOU = 0.0, DetectionBoxes_Recall/AR@1 = 0.0, DetectionBoxes_Recall/AR@10 = 0.0, DetectionBoxes_Recall/AR@100 = 0.0, DetectionBoxes_Recall/AR@100 (large) = 0.0, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 8.149852, Loss/localization_loss = 3.6597726, Loss/regularization_loss = 0.52632165, Loss/total_loss = 12.335946, global_step = 5326, learning_rate = 0.004, loss = 12.335946\n","I0714 20:17:15.078763 139841818478464 estimator.py:2049] Saving dict for global step 5326: DetectionBoxes_Precision/mAP = 0.0, DetectionBoxes_Precision/mAP (large) = 0.0, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 0.0, DetectionBoxes_Precision/mAP@.75IOU = 0.0, DetectionBoxes_Recall/AR@1 = 0.0, DetectionBoxes_Recall/AR@10 = 0.0, DetectionBoxes_Recall/AR@100 = 0.0, DetectionBoxes_Recall/AR@100 (large) = 0.0, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 8.149852, Loss/localization_loss = 3.6597726, Loss/regularization_loss = 0.52632165, Loss/total_loss = 12.335946, global_step = 5326, learning_rate = 0.004, loss = 12.335946\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 5326: data_one/output/model.ckpt-5326\n","I0714 20:17:15.768825 139841818478464 estimator.py:2109] Saving 'checkpoint_path' summary for global step 5326: data_one/output/model.ckpt-5326\n","INFO:tensorflow:global_step/sec: 4.32939\n","I0714 20:17:24.224832 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 4.32939\n","INFO:tensorflow:loss = 5.6647677, step = 5400 (23.097 sec)\n","I0714 20:17:24.226123 139841818478464 basic_session_run_hooks.py:260] loss = 5.6647677, step = 5400 (23.097 sec)\n","INFO:tensorflow:global_step/sec: 9.18171\n","I0714 20:17:35.116074 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.18171\n","INFO:tensorflow:loss = 4.813525, step = 5500 (10.891 sec)\n","I0714 20:17:35.117506 139841818478464 basic_session_run_hooks.py:260] loss = 4.813525, step = 5500 (10.891 sec)\n","INFO:tensorflow:global_step/sec: 9.02209\n","I0714 20:17:46.199975 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.02209\n","INFO:tensorflow:loss = 4.2210464, step = 5600 (11.084 sec)\n","I0714 20:17:46.201415 139841818478464 basic_session_run_hooks.py:260] loss = 4.2210464, step = 5600 (11.084 sec)\n","INFO:tensorflow:global_step/sec: 9.12175\n","I0714 20:17:57.162750 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.12175\n","INFO:tensorflow:loss = 2.8699799, step = 5700 (10.963 sec)\n","I0714 20:17:57.164159 139841818478464 basic_session_run_hooks.py:260] loss = 2.8699799, step = 5700 (10.963 sec)\n","INFO:tensorflow:global_step/sec: 9.05534\n","I0714 20:18:08.205985 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.05534\n","INFO:tensorflow:loss = 3.5685096, step = 5800 (11.043 sec)\n","I0714 20:18:08.207235 139841818478464 basic_session_run_hooks.py:260] loss = 3.5685096, step = 5800 (11.043 sec)\n","INFO:tensorflow:global_step/sec: 9.04008\n","I0714 20:18:19.267820 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.04008\n","INFO:tensorflow:loss = 4.1650906, step = 5900 (11.062 sec)\n","I0714 20:18:19.269116 139841818478464 basic_session_run_hooks.py:260] loss = 4.1650906, step = 5900 (11.062 sec)\n","INFO:tensorflow:global_step/sec: 9.13996\n","I0714 20:18:30.208778 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.13996\n","INFO:tensorflow:loss = 4.054494, step = 6000 (10.941 sec)\n","I0714 20:18:30.209929 139841818478464 basic_session_run_hooks.py:260] loss = 4.054494, step = 6000 (10.941 sec)\n","INFO:tensorflow:global_step/sec: 9.11774\n","I0714 20:18:41.176390 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11774\n","INFO:tensorflow:loss = 4.9578705, step = 6100 (10.968 sec)\n","I0714 20:18:41.177698 139841818478464 basic_session_run_hooks.py:260] loss = 4.9578705, step = 6100 (10.968 sec)\n","INFO:tensorflow:global_step/sec: 8.97626\n","I0714 20:18:52.316922 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.97626\n","INFO:tensorflow:loss = 4.2916718, step = 6200 (11.140 sec)\n","I0714 20:18:52.318176 139841818478464 basic_session_run_hooks.py:260] loss = 4.2916718, step = 6200 (11.140 sec)\n","INFO:tensorflow:global_step/sec: 9.0171\n","I0714 20:19:03.406965 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.0171\n","INFO:tensorflow:loss = 2.742452, step = 6300 (11.091 sec)\n","I0714 20:19:03.408940 139841818478464 basic_session_run_hooks.py:260] loss = 2.742452, step = 6300 (11.091 sec)\n","INFO:tensorflow:global_step/sec: 9.03784\n","I0714 20:19:14.471512 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.03784\n","INFO:tensorflow:loss = 4.8860016, step = 6400 (11.064 sec)\n","I0714 20:19:14.473034 139841818478464 basic_session_run_hooks.py:260] loss = 4.8860016, step = 6400 (11.064 sec)\n","INFO:tensorflow:global_step/sec: 9.05246\n","I0714 20:19:25.518269 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.05246\n","INFO:tensorflow:loss = 2.805658, step = 6500 (11.047 sec)\n","I0714 20:19:25.519579 139841818478464 basic_session_run_hooks.py:260] loss = 2.805658, step = 6500 (11.047 sec)\n","INFO:tensorflow:global_step/sec: 8.90333\n","I0714 20:19:36.750024 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.90333\n","INFO:tensorflow:loss = 7.2313538, step = 6600 (11.232 sec)\n","I0714 20:19:36.751354 139841818478464 basic_session_run_hooks.py:260] loss = 7.2313538, step = 6600 (11.232 sec)\n","INFO:tensorflow:global_step/sec: 9.0192\n","I0714 20:19:47.837614 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.0192\n","INFO:tensorflow:loss = 3.3841662, step = 6700 (11.088 sec)\n","I0714 20:19:47.839133 139841818478464 basic_session_run_hooks.py:260] loss = 3.3841662, step = 6700 (11.088 sec)\n","INFO:tensorflow:global_step/sec: 9.10177\n","I0714 20:19:58.824391 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.10177\n","INFO:tensorflow:loss = 2.152956, step = 6800 (10.986 sec)\n","I0714 20:19:58.825564 139841818478464 basic_session_run_hooks.py:260] loss = 2.152956, step = 6800 (10.986 sec)\n","INFO:tensorflow:global_step/sec: 9.01331\n","I0714 20:20:09.919040 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.01331\n","INFO:tensorflow:loss = 8.060442, step = 6900 (11.095 sec)\n","I0714 20:20:09.920223 139841818478464 basic_session_run_hooks.py:260] loss = 8.060442, step = 6900 (11.095 sec)\n","INFO:tensorflow:global_step/sec: 9.17274\n","I0714 20:20:20.820895 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.17274\n","INFO:tensorflow:loss = 3.4534836, step = 7000 (10.902 sec)\n","I0714 20:20:20.821949 139841818478464 basic_session_run_hooks.py:260] loss = 3.4534836, step = 7000 (10.902 sec)\n","INFO:tensorflow:global_step/sec: 9.11575\n","I0714 20:20:31.790950 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11575\n","INFO:tensorflow:loss = 2.9780307, step = 7100 (10.970 sec)\n","I0714 20:20:31.792351 139841818478464 basic_session_run_hooks.py:260] loss = 2.9780307, step = 7100 (10.970 sec)\n","INFO:tensorflow:global_step/sec: 8.93559\n","I0714 20:20:42.982189 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.93559\n","INFO:tensorflow:loss = 4.584117, step = 7200 (11.191 sec)\n","I0714 20:20:42.983325 139841818478464 basic_session_run_hooks.py:260] loss = 4.584117, step = 7200 (11.191 sec)\n","INFO:tensorflow:global_step/sec: 9.04069\n","I0714 20:20:54.043251 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.04069\n","INFO:tensorflow:loss = 3.5423584, step = 7300 (11.061 sec)\n","I0714 20:20:54.044471 139841818478464 basic_session_run_hooks.py:260] loss = 3.5423584, step = 7300 (11.061 sec)\n","INFO:tensorflow:global_step/sec: 9.11197\n","I0714 20:21:05.017816 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11197\n","INFO:tensorflow:loss = 2.5916443, step = 7400 (10.975 sec)\n","I0714 20:21:05.019667 139841818478464 basic_session_run_hooks.py:260] loss = 2.5916443, step = 7400 (10.975 sec)\n","INFO:tensorflow:global_step/sec: 9.08039\n","I0714 20:21:16.030549 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.08039\n","INFO:tensorflow:loss = 3.0153737, step = 7500 (11.012 sec)\n","I0714 20:21:16.031963 139841818478464 basic_session_run_hooks.py:260] loss = 3.0153737, step = 7500 (11.012 sec)\n","INFO:tensorflow:global_step/sec: 8.81238\n","I0714 20:21:27.378301 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.81238\n","INFO:tensorflow:loss = 4.126137, step = 7600 (11.347 sec)\n","I0714 20:21:27.379361 139841818478464 basic_session_run_hooks.py:260] loss = 4.126137, step = 7600 (11.347 sec)\n","INFO:tensorflow:global_step/sec: 8.91252\n","I0714 20:21:38.598422 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.91252\n","INFO:tensorflow:loss = 3.2949467, step = 7700 (11.220 sec)\n","I0714 20:21:38.599687 139841818478464 basic_session_run_hooks.py:260] loss = 3.2949467, step = 7700 (11.220 sec)\n","INFO:tensorflow:global_step/sec: 8.95064\n","I0714 20:21:49.770787 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.95064\n","INFO:tensorflow:loss = 4.717494, step = 7800 (11.173 sec)\n","I0714 20:21:49.772326 139841818478464 basic_session_run_hooks.py:260] loss = 4.717494, step = 7800 (11.173 sec)\n","INFO:tensorflow:global_step/sec: 9.00032\n","I0714 20:22:00.881473 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.00032\n","INFO:tensorflow:loss = 6.175521, step = 7900 (11.110 sec)\n","I0714 20:22:00.882636 139841818478464 basic_session_run_hooks.py:260] loss = 6.175521, step = 7900 (11.110 sec)\n","INFO:tensorflow:global_step/sec: 9.06375\n","I0714 20:22:11.914481 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.06375\n","INFO:tensorflow:loss = 3.487729, step = 8000 (11.033 sec)\n","I0714 20:22:11.915882 139841818478464 basic_session_run_hooks.py:260] loss = 3.487729, step = 8000 (11.033 sec)\n","INFO:tensorflow:global_step/sec: 9.06572\n","I0714 20:22:22.945014 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.06572\n","INFO:tensorflow:loss = 5.1806407, step = 8100 (11.031 sec)\n","I0714 20:22:22.946437 139841818478464 basic_session_run_hooks.py:260] loss = 5.1806407, step = 8100 (11.031 sec)\n","INFO:tensorflow:global_step/sec: 8.98305\n","I0714 20:22:34.077110 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.98305\n","INFO:tensorflow:loss = 5.2924194, step = 8200 (11.132 sec)\n","I0714 20:22:34.078347 139841818478464 basic_session_run_hooks.py:260] loss = 5.2924194, step = 8200 (11.132 sec)\n","INFO:tensorflow:global_step/sec: 8.98882\n","I0714 20:22:45.202038 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.98882\n","INFO:tensorflow:loss = 2.974423, step = 8300 (11.125 sec)\n","I0714 20:22:45.203149 139841818478464 basic_session_run_hooks.py:260] loss = 2.974423, step = 8300 (11.125 sec)\n","INFO:tensorflow:global_step/sec: 9.15793\n","I0714 20:22:56.121528 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.15793\n","INFO:tensorflow:loss = 6.467799, step = 8400 (10.920 sec)\n","I0714 20:22:56.122732 139841818478464 basic_session_run_hooks.py:260] loss = 6.467799, step = 8400 (10.920 sec)\n","INFO:tensorflow:global_step/sec: 9.05663\n","I0714 20:23:07.163212 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.05663\n","INFO:tensorflow:loss = 2.5822487, step = 8500 (11.042 sec)\n","I0714 20:23:07.164972 139841818478464 basic_session_run_hooks.py:260] loss = 2.5822487, step = 8500 (11.042 sec)\n","INFO:tensorflow:global_step/sec: 9.03356\n","I0714 20:23:18.233009 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.03356\n","INFO:tensorflow:loss = 5.306458, step = 8600 (11.069 sec)\n","I0714 20:23:18.234230 139841818478464 basic_session_run_hooks.py:260] loss = 5.306458, step = 8600 (11.069 sec)\n","INFO:tensorflow:global_step/sec: 8.93968\n","I0714 20:23:29.419119 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.93968\n","INFO:tensorflow:loss = 1.0025816, step = 8700 (11.186 sec)\n","I0714 20:23:29.420190 139841818478464 basic_session_run_hooks.py:260] loss = 1.0025816, step = 8700 (11.186 sec)\n","INFO:tensorflow:global_step/sec: 8.96437\n","I0714 20:23:40.574360 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.96437\n","INFO:tensorflow:loss = 9.43233, step = 8800 (11.155 sec)\n","I0714 20:23:40.575567 139841818478464 basic_session_run_hooks.py:260] loss = 9.43233, step = 8800 (11.155 sec)\n","INFO:tensorflow:global_step/sec: 9.01632\n","I0714 20:23:51.665353 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.01632\n","INFO:tensorflow:loss = 1.7652817, step = 8900 (11.091 sec)\n","I0714 20:23:51.666559 139841818478464 basic_session_run_hooks.py:260] loss = 1.7652817, step = 8900 (11.091 sec)\n","INFO:tensorflow:global_step/sec: 8.9395\n","I0714 20:24:02.851665 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.9395\n","INFO:tensorflow:loss = 3.3358586, step = 9000 (11.186 sec)\n","I0714 20:24:02.853016 139841818478464 basic_session_run_hooks.py:260] loss = 3.3358586, step = 9000 (11.186 sec)\n","INFO:tensorflow:global_step/sec: 9.12592\n","I0714 20:24:13.809541 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.12592\n","INFO:tensorflow:loss = 2.3082812, step = 9100 (10.958 sec)\n","I0714 20:24:13.811016 139841818478464 basic_session_run_hooks.py:260] loss = 2.3082812, step = 9100 (10.958 sec)\n","INFO:tensorflow:global_step/sec: 9.02888\n","I0714 20:24:24.885044 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.02888\n","INFO:tensorflow:loss = 6.056348, step = 9200 (11.075 sec)\n","I0714 20:24:24.886256 139841818478464 basic_session_run_hooks.py:260] loss = 6.056348, step = 9200 (11.075 sec)\n","INFO:tensorflow:global_step/sec: 8.93153\n","I0714 20:24:36.081333 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.93153\n","INFO:tensorflow:loss = 2.9892602, step = 9300 (11.196 sec)\n","I0714 20:24:36.082396 139841818478464 basic_session_run_hooks.py:260] loss = 2.9892602, step = 9300 (11.196 sec)\n","INFO:tensorflow:global_step/sec: 8.94544\n","I0714 20:24:47.260272 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.94544\n","INFO:tensorflow:loss = 3.2842145, step = 9400 (11.179 sec)\n","I0714 20:24:47.261393 139841818478464 basic_session_run_hooks.py:260] loss = 3.2842145, step = 9400 (11.179 sec)\n","INFO:tensorflow:global_step/sec: 9.0688\n","I0714 20:24:58.287084 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.0688\n","INFO:tensorflow:loss = 3.7951016, step = 9500 (11.027 sec)\n","I0714 20:24:58.288379 139841818478464 basic_session_run_hooks.py:260] loss = 3.7951016, step = 9500 (11.027 sec)\n","INFO:tensorflow:global_step/sec: 9.15353\n","I0714 20:25:09.211794 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.15353\n","INFO:tensorflow:loss = 2.1832802, step = 9600 (10.925 sec)\n","I0714 20:25:09.213298 139841818478464 basic_session_run_hooks.py:260] loss = 2.1832802, step = 9600 (10.925 sec)\n","INFO:tensorflow:global_step/sec: 9.08992\n","I0714 20:25:20.213015 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.08992\n","INFO:tensorflow:loss = 5.01074, step = 9700 (11.001 sec)\n","I0714 20:25:20.214273 139841818478464 basic_session_run_hooks.py:260] loss = 5.01074, step = 9700 (11.001 sec)\n","INFO:tensorflow:global_step/sec: 8.80831\n","I0714 20:25:31.565884 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.80831\n","INFO:tensorflow:loss = 3.1140437, step = 9800 (11.353 sec)\n","I0714 20:25:31.567106 139841818478464 basic_session_run_hooks.py:260] loss = 3.1140437, step = 9800 (11.353 sec)\n","INFO:tensorflow:global_step/sec: 8.94418\n","I0714 20:25:42.746353 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.94418\n","INFO:tensorflow:loss = 2.898315, step = 9900 (11.180 sec)\n","I0714 20:25:42.747456 139841818478464 basic_session_run_hooks.py:260] loss = 2.898315, step = 9900 (11.180 sec)\n","INFO:tensorflow:global_step/sec: 9.08484\n","I0714 20:25:53.753727 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.08484\n","INFO:tensorflow:loss = 3.2761998, step = 10000 (11.008 sec)\n","I0714 20:25:53.755091 139841818478464 basic_session_run_hooks.py:260] loss = 3.2761998, step = 10000 (11.008 sec)\n","INFO:tensorflow:global_step/sec: 9.08668\n","I0714 20:26:04.758851 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.08668\n","INFO:tensorflow:loss = 2.28428, step = 10100 (11.005 sec)\n","I0714 20:26:04.760148 139841818478464 basic_session_run_hooks.py:260] loss = 2.28428, step = 10100 (11.005 sec)\n","INFO:tensorflow:global_step/sec: 9.18894\n","I0714 20:26:15.641579 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.18894\n","INFO:tensorflow:loss = 2.334052, step = 10200 (10.883 sec)\n","I0714 20:26:15.642774 139841818478464 basic_session_run_hooks.py:260] loss = 2.334052, step = 10200 (10.883 sec)\n","INFO:tensorflow:global_step/sec: 9.0473\n","I0714 20:26:26.694522 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.0473\n","INFO:tensorflow:loss = 4.7010903, step = 10300 (11.053 sec)\n","I0714 20:26:26.695682 139841818478464 basic_session_run_hooks.py:260] loss = 4.7010903, step = 10300 (11.053 sec)\n","INFO:tensorflow:global_step/sec: 8.95346\n","I0714 20:26:37.863440 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.95346\n","INFO:tensorflow:loss = 3.4431696, step = 10400 (11.169 sec)\n","I0714 20:26:37.864506 139841818478464 basic_session_run_hooks.py:260] loss = 3.4431696, step = 10400 (11.169 sec)\n","INFO:tensorflow:global_step/sec: 8.88601\n","I0714 20:26:49.117101 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.88601\n","INFO:tensorflow:loss = 3.675661, step = 10500 (11.254 sec)\n","I0714 20:26:49.118319 139841818478464 basic_session_run_hooks.py:260] loss = 3.675661, step = 10500 (11.254 sec)\n","INFO:tensorflow:global_step/sec: 8.8728\n","I0714 20:27:00.387419 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.8728\n","INFO:tensorflow:loss = 3.8587282, step = 10600 (11.270 sec)\n","I0714 20:27:00.388598 139841818478464 basic_session_run_hooks.py:260] loss = 3.8587282, step = 10600 (11.270 sec)\n","INFO:tensorflow:Saving checkpoints for 10632 into data_one/output/model.ckpt.\n","I0714 20:27:03.922630 139841818478464 basic_session_run_hooks.py:606] Saving checkpoints for 10632 into data_one/output/model.ckpt.\n","INFO:tensorflow:Calling model_fn.\n","I0714 20:27:06.180738 139841818478464 estimator.py:1148] Calling model_fn.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:27:08.035281 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:27:08.072370 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:27:08.108341 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:27:08.146351 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:27:08.182576 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:27:08.219752 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:Done calling model_fn.\n","I0714 20:27:09.889976 139841818478464 estimator.py:1150] Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2020-07-14T20:27:09Z\n","I0714 20:27:09.911301 139841818478464 evaluation.py:255] Starting evaluation at 2020-07-14T20:27:09Z\n","INFO:tensorflow:Graph was finalized.\n","I0714 20:27:10.529859 139841818478464 monitored_session.py:240] Graph was finalized.\n","2020-07-14 20:27:10.530899: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:27:10.531397: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:27:10.531528: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:27:10.531587: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:27:10.531642: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:27:10.531691: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:27:10.531738: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:27:10.531791: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:27:10.531840: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:27:10.531999: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:27:10.532429: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:27:10.532722: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:27:10.532776: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:27:10.532796: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:27:10.532815: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:27:10.532975: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:27:10.533430: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:27:10.533709: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-10632\n","I0714 20:27:10.535817 139841818478464 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-10632\n","INFO:tensorflow:Running local_init_op.\n","I0714 20:27:11.237921 139841818478464 session_manager.py:500] Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","I0714 20:27:11.369340 139841818478464 session_manager.py:502] Done running local_init_op.\n","INFO:tensorflow:Performing evaluation on 7 images.\n","I0714 20:27:13.752608 139838559655680 coco_evaluation.py:237] Performing evaluation on 7 images.\n","creating index...\n","index created!\n","INFO:tensorflow:Loading and preparing annotation results...\n","I0714 20:27:13.753042 139838559655680 coco_tools.py:116] Loading and preparing annotation results...\n","INFO:tensorflow:DONE (t=0.00s)\n","I0714 20:27:13.754373 139838559655680 coco_tools.py:138] DONE (t=0.00s)\n","creating index...\n","index created!\n","Running per image evaluation...\n","Evaluate annotation type *bbox*\n","DONE (t=0.07s).\n","Accumulating evaluation results...\n","DONE (t=0.01s).\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.374\n"," Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.851\n"," Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.218\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.374\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.386\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.386\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.386\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.386\n","INFO:tensorflow:Finished evaluation at 2020-07-14-20:27:14\n","I0714 20:27:14.401492 139841818478464 evaluation.py:275] Finished evaluation at 2020-07-14-20:27:14\n","INFO:tensorflow:Saving dict for global step 10632: DetectionBoxes_Precision/mAP = 0.37376237, DetectionBoxes_Precision/mAP (large) = 0.37376237, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 0.85148513, DetectionBoxes_Precision/mAP@.75IOU = 0.21782178, DetectionBoxes_Recall/AR@1 = 0.3857143, DetectionBoxes_Recall/AR@10 = 0.3857143, DetectionBoxes_Recall/AR@100 = 0.3857143, DetectionBoxes_Recall/AR@100 (large) = 0.3857143, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 1.7998863, Loss/localization_loss = 0.9834606, Loss/regularization_loss = 0.5366225, Loss/total_loss = 3.3199694, global_step = 10632, learning_rate = 0.004, loss = 3.3199694\n","I0714 20:27:14.401859 139841818478464 estimator.py:2049] Saving dict for global step 10632: DetectionBoxes_Precision/mAP = 0.37376237, DetectionBoxes_Precision/mAP (large) = 0.37376237, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 0.85148513, DetectionBoxes_Precision/mAP@.75IOU = 0.21782178, DetectionBoxes_Recall/AR@1 = 0.3857143, DetectionBoxes_Recall/AR@10 = 0.3857143, DetectionBoxes_Recall/AR@100 = 0.3857143, DetectionBoxes_Recall/AR@100 (large) = 0.3857143, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 1.7998863, Loss/localization_loss = 0.9834606, Loss/regularization_loss = 0.5366225, Loss/total_loss = 3.3199694, global_step = 10632, learning_rate = 0.004, loss = 3.3199694\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 10632: data_one/output/model.ckpt-10632\n","I0714 20:27:14.405621 139841818478464 estimator.py:2109] Saving 'checkpoint_path' summary for global step 10632: data_one/output/model.ckpt-10632\n","INFO:tensorflow:global_step/sec: 4.54884\n","I0714 20:27:22.371035 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 4.54884\n","INFO:tensorflow:loss = 1.841263, step = 10700 (21.984 sec)\n","I0714 20:27:22.372856 139841818478464 basic_session_run_hooks.py:260] loss = 1.841263, step = 10700 (21.984 sec)\n","INFO:tensorflow:global_step/sec: 8.89209\n","I0714 20:27:33.617005 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.89209\n","INFO:tensorflow:loss = 2.4707084, step = 10800 (11.245 sec)\n","I0714 20:27:33.618339 139841818478464 basic_session_run_hooks.py:260] loss = 2.4707084, step = 10800 (11.245 sec)\n","INFO:tensorflow:global_step/sec: 9.00456\n","I0714 20:27:44.722486 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.00456\n","INFO:tensorflow:loss = 4.1191335, step = 10900 (11.105 sec)\n","I0714 20:27:44.723696 139841818478464 basic_session_run_hooks.py:260] loss = 4.1191335, step = 10900 (11.105 sec)\n","INFO:tensorflow:global_step/sec: 9.0395\n","I0714 20:27:55.785022 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.0395\n","INFO:tensorflow:loss = 1.4438157, step = 11000 (11.063 sec)\n","I0714 20:27:55.786247 139841818478464 basic_session_run_hooks.py:260] loss = 1.4438157, step = 11000 (11.063 sec)\n","INFO:tensorflow:global_step/sec: 8.9421\n","I0714 20:28:06.968141 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.9421\n","INFO:tensorflow:loss = 2.1322665, step = 11100 (11.183 sec)\n","I0714 20:28:06.969540 139841818478464 basic_session_run_hooks.py:260] loss = 2.1322665, step = 11100 (11.183 sec)\n","INFO:tensorflow:global_step/sec: 9.07643\n","I0714 20:28:17.985673 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.07643\n","INFO:tensorflow:loss = 2.4626875, step = 11200 (11.017 sec)\n","I0714 20:28:17.986995 139841818478464 basic_session_run_hooks.py:260] loss = 2.4626875, step = 11200 (11.017 sec)\n","INFO:tensorflow:global_step/sec: 9.17621\n","I0714 20:28:28.883406 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.17621\n","INFO:tensorflow:loss = 3.9363616, step = 11300 (10.898 sec)\n","I0714 20:28:28.884545 139841818478464 basic_session_run_hooks.py:260] loss = 3.9363616, step = 11300 (10.898 sec)\n","INFO:tensorflow:global_step/sec: 9.08939\n","I0714 20:28:39.885264 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.08939\n","INFO:tensorflow:loss = 3.0749269, step = 11400 (11.002 sec)\n","I0714 20:28:39.886272 139841818478464 basic_session_run_hooks.py:260] loss = 3.0749269, step = 11400 (11.002 sec)\n","INFO:tensorflow:global_step/sec: 9.11412\n","I0714 20:28:50.857267 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11412\n","INFO:tensorflow:loss = 2.4767735, step = 11500 (10.972 sec)\n","I0714 20:28:50.858564 139841818478464 basic_session_run_hooks.py:260] loss = 2.4767735, step = 11500 (10.972 sec)\n","INFO:tensorflow:global_step/sec: 9.11422\n","I0714 20:29:01.829090 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11422\n","INFO:tensorflow:loss = 4.0677204, step = 11600 (10.972 sec)\n","I0714 20:29:01.830546 139841818478464 basic_session_run_hooks.py:260] loss = 4.0677204, step = 11600 (10.972 sec)\n","INFO:tensorflow:global_step/sec: 9.11745\n","I0714 20:29:12.797082 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.11745\n","INFO:tensorflow:loss = 4.604232, step = 11700 (10.968 sec)\n","I0714 20:29:12.798277 139841818478464 basic_session_run_hooks.py:260] loss = 4.604232, step = 11700 (10.968 sec)\n","INFO:tensorflow:global_step/sec: 9.09031\n","I0714 20:29:23.797794 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.09031\n","INFO:tensorflow:loss = 4.3350058, step = 11800 (11.002 sec)\n","I0714 20:29:23.799844 139841818478464 basic_session_run_hooks.py:260] loss = 4.3350058, step = 11800 (11.002 sec)\n","INFO:tensorflow:global_step/sec: 9.1381\n","I0714 20:29:34.740961 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.1381\n","INFO:tensorflow:loss = 1.7596691, step = 11900 (10.942 sec)\n","I0714 20:29:34.742208 139841818478464 basic_session_run_hooks.py:260] loss = 1.7596691, step = 11900 (10.942 sec)\n","INFO:tensorflow:global_step/sec: 9.04014\n","I0714 20:29:45.802747 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.04014\n","INFO:tensorflow:loss = 3.018433, step = 12000 (11.062 sec)\n","I0714 20:29:45.803947 139841818478464 basic_session_run_hooks.py:260] loss = 3.018433, step = 12000 (11.062 sec)\n","INFO:tensorflow:global_step/sec: 8.87297\n","I0714 20:29:57.072998 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.87297\n","INFO:tensorflow:loss = 1.9911107, step = 12100 (11.270 sec)\n","I0714 20:29:57.074311 139841818478464 basic_session_run_hooks.py:260] loss = 1.9911107, step = 12100 (11.270 sec)\n","INFO:tensorflow:global_step/sec: 9.02315\n","I0714 20:30:08.155545 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.02315\n","INFO:tensorflow:loss = 5.157, step = 12200 (11.082 sec)\n","I0714 20:30:08.156798 139841818478464 basic_session_run_hooks.py:260] loss = 5.157, step = 12200 (11.082 sec)\n","INFO:tensorflow:global_step/sec: 7.77392\n","I0714 20:30:21.019074 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 7.77392\n","INFO:tensorflow:loss = 2.3866563, step = 12300 (12.863 sec)\n","I0714 20:30:21.020159 139841818478464 basic_session_run_hooks.py:260] loss = 2.3866563, step = 12300 (12.863 sec)\n","INFO:tensorflow:global_step/sec: 8.91739\n","I0714 20:30:32.233151 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.91739\n","INFO:tensorflow:loss = 1.792282, step = 12400 (11.214 sec)\n","I0714 20:30:32.234571 139841818478464 basic_session_run_hooks.py:260] loss = 1.792282, step = 12400 (11.214 sec)\n","INFO:tensorflow:global_step/sec: 9.00161\n","I0714 20:30:43.342266 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.00161\n","INFO:tensorflow:loss = 4.300587, step = 12500 (11.109 sec)\n","I0714 20:30:43.343275 139841818478464 basic_session_run_hooks.py:260] loss = 4.300587, step = 12500 (11.109 sec)\n","INFO:tensorflow:global_step/sec: 9.06314\n","I0714 20:30:54.375948 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.06314\n","INFO:tensorflow:loss = 4.5058823, step = 12600 (11.034 sec)\n","I0714 20:30:54.377212 139841818478464 basic_session_run_hooks.py:260] loss = 4.5058823, step = 12600 (11.034 sec)\n","INFO:tensorflow:global_step/sec: 8.87543\n","I0714 20:31:05.642997 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.87543\n","INFO:tensorflow:loss = 4.111328, step = 12700 (11.267 sec)\n","I0714 20:31:05.644334 139841818478464 basic_session_run_hooks.py:260] loss = 4.111328, step = 12700 (11.267 sec)\n","INFO:tensorflow:global_step/sec: 8.88056\n","I0714 20:31:16.903521 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.88056\n","INFO:tensorflow:loss = 2.104671, step = 12800 (11.260 sec)\n","I0714 20:31:16.904680 139841818478464 basic_session_run_hooks.py:260] loss = 2.104671, step = 12800 (11.260 sec)\n","INFO:tensorflow:global_step/sec: 8.88184\n","I0714 20:31:28.162439 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.88184\n","INFO:tensorflow:loss = 2.5335958, step = 12900 (11.259 sec)\n","I0714 20:31:28.164020 139841818478464 basic_session_run_hooks.py:260] loss = 2.5335958, step = 12900 (11.259 sec)\n","INFO:tensorflow:global_step/sec: 9.03668\n","I0714 20:31:39.228459 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.03668\n","INFO:tensorflow:loss = 2.358392, step = 13000 (11.066 sec)\n","I0714 20:31:39.229610 139841818478464 basic_session_run_hooks.py:260] loss = 2.358392, step = 13000 (11.066 sec)\n","INFO:tensorflow:global_step/sec: 9.02397\n","I0714 20:31:50.310072 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.02397\n","INFO:tensorflow:loss = 2.139908, step = 13100 (11.082 sec)\n","I0714 20:31:50.311332 139841818478464 basic_session_run_hooks.py:260] loss = 2.139908, step = 13100 (11.082 sec)\n","INFO:tensorflow:global_step/sec: 8.97541\n","I0714 20:32:01.451601 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.97541\n","INFO:tensorflow:loss = 3.0534844, step = 13200 (11.141 sec)\n","I0714 20:32:01.452804 139841818478464 basic_session_run_hooks.py:260] loss = 3.0534844, step = 13200 (11.141 sec)\n","INFO:tensorflow:global_step/sec: 8.70537\n","I0714 20:32:12.938775 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.70537\n","INFO:tensorflow:loss = 1.8896705, step = 13300 (11.487 sec)\n","I0714 20:32:12.939990 139841818478464 basic_session_run_hooks.py:260] loss = 1.8896705, step = 13300 (11.487 sec)\n","INFO:tensorflow:global_step/sec: 8.83638\n","I0714 20:32:24.255622 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.83638\n","INFO:tensorflow:loss = 1.3084177, step = 13400 (11.317 sec)\n","I0714 20:32:24.256649 139841818478464 basic_session_run_hooks.py:260] loss = 1.3084177, step = 13400 (11.317 sec)\n","INFO:tensorflow:global_step/sec: 8.9552\n","I0714 20:32:35.422339 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.9552\n","INFO:tensorflow:loss = 3.509255, step = 13500 (11.167 sec)\n","I0714 20:32:35.423428 139841818478464 basic_session_run_hooks.py:260] loss = 3.509255, step = 13500 (11.167 sec)\n","INFO:tensorflow:global_step/sec: 9.09203\n","I0714 20:32:46.420976 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.09203\n","INFO:tensorflow:loss = 3.838797, step = 13600 (10.999 sec)\n","I0714 20:32:46.422273 139841818478464 basic_session_run_hooks.py:260] loss = 3.838797, step = 13600 (10.999 sec)\n","INFO:tensorflow:global_step/sec: 8.95806\n","I0714 20:32:57.584149 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.95806\n","INFO:tensorflow:loss = 3.2179108, step = 13700 (11.163 sec)\n","I0714 20:32:57.585138 139841818478464 basic_session_run_hooks.py:260] loss = 3.2179108, step = 13700 (11.163 sec)\n","INFO:tensorflow:global_step/sec: 8.86345\n","I0714 20:33:08.866386 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.86345\n","INFO:tensorflow:loss = 4.7497, step = 13800 (11.282 sec)\n","I0714 20:33:08.867474 139841818478464 basic_session_run_hooks.py:260] loss = 4.7497, step = 13800 (11.282 sec)\n","INFO:tensorflow:global_step/sec: 8.94355\n","I0714 20:33:20.047630 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.94355\n","INFO:tensorflow:loss = 4.7673573, step = 13900 (11.181 sec)\n","I0714 20:33:20.048849 139841818478464 basic_session_run_hooks.py:260] loss = 4.7673573, step = 13900 (11.181 sec)\n","INFO:tensorflow:global_step/sec: 8.94028\n","I0714 20:33:31.232970 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.94028\n","INFO:tensorflow:loss = 4.3436837, step = 14000 (11.186 sec)\n","I0714 20:33:31.234774 139841818478464 basic_session_run_hooks.py:260] loss = 4.3436837, step = 14000 (11.186 sec)\n","INFO:tensorflow:global_step/sec: 9.08668\n","I0714 20:33:42.238094 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.08668\n","INFO:tensorflow:loss = 2.2960243, step = 14100 (11.005 sec)\n","I0714 20:33:42.239328 139841818478464 basic_session_run_hooks.py:260] loss = 2.2960243, step = 14100 (11.005 sec)\n","INFO:tensorflow:global_step/sec: 8.86552\n","I0714 20:33:53.517746 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.86552\n","INFO:tensorflow:loss = 6.2469864, step = 14200 (11.280 sec)\n","I0714 20:33:53.518995 139841818478464 basic_session_run_hooks.py:260] loss = 6.2469864, step = 14200 (11.280 sec)\n","INFO:tensorflow:global_step/sec: 8.80531\n","I0714 20:34:04.874548 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.80531\n","INFO:tensorflow:loss = 1.2223561, step = 14300 (11.357 sec)\n","I0714 20:34:04.875927 139841818478464 basic_session_run_hooks.py:260] loss = 1.2223561, step = 14300 (11.357 sec)\n","INFO:tensorflow:global_step/sec: 8.56625\n","I0714 20:34:16.548275 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.56625\n","INFO:tensorflow:loss = 3.8732963, step = 14400 (11.673 sec)\n","I0714 20:34:16.549349 139841818478464 basic_session_run_hooks.py:260] loss = 3.8732963, step = 14400 (11.673 sec)\n","INFO:tensorflow:global_step/sec: 8.86369\n","I0714 20:34:27.830253 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.86369\n","INFO:tensorflow:loss = 6.6009817, step = 14500 (11.282 sec)\n","I0714 20:34:27.831491 139841818478464 basic_session_run_hooks.py:260] loss = 6.6009817, step = 14500 (11.282 sec)\n","INFO:tensorflow:global_step/sec: 8.98384\n","I0714 20:34:38.961317 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.98384\n","INFO:tensorflow:loss = 6.007664, step = 14600 (11.131 sec)\n","I0714 20:34:38.962598 139841818478464 basic_session_run_hooks.py:260] loss = 6.007664, step = 14600 (11.131 sec)\n","INFO:tensorflow:global_step/sec: 8.8721\n","I0714 20:34:50.232607 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.8721\n","INFO:tensorflow:loss = 4.0949135, step = 14700 (11.271 sec)\n","I0714 20:34:50.233894 139841818478464 basic_session_run_hooks.py:260] loss = 4.0949135, step = 14700 (11.271 sec)\n","INFO:tensorflow:global_step/sec: 8.85831\n","I0714 20:35:01.521431 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.85831\n","INFO:tensorflow:loss = 1.8817687, step = 14800 (11.289 sec)\n","I0714 20:35:01.522619 139841818478464 basic_session_run_hooks.py:260] loss = 1.8817687, step = 14800 (11.289 sec)\n","INFO:tensorflow:global_step/sec: 8.92844\n","I0714 20:35:12.721585 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.92844\n","INFO:tensorflow:loss = 2.8626637, step = 14900 (11.200 sec)\n","I0714 20:35:12.722754 139841818478464 basic_session_run_hooks.py:260] loss = 2.8626637, step = 14900 (11.200 sec)\n","INFO:tensorflow:global_step/sec: 8.8772\n","I0714 20:35:23.986432 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.8772\n","INFO:tensorflow:loss = 3.8686738, step = 15000 (11.265 sec)\n","I0714 20:35:23.987565 139841818478464 basic_session_run_hooks.py:260] loss = 3.8686738, step = 15000 (11.265 sec)\n","INFO:tensorflow:global_step/sec: 8.87218\n","I0714 20:35:35.257641 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.87218\n","INFO:tensorflow:loss = 2.604461, step = 15100 (11.272 sec)\n","I0714 20:35:35.259363 139841818478464 basic_session_run_hooks.py:260] loss = 2.604461, step = 15100 (11.272 sec)\n","INFO:tensorflow:global_step/sec: 9.02944\n","I0714 20:35:46.332475 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 9.02944\n","INFO:tensorflow:loss = 2.2956448, step = 15200 (11.074 sec)\n","I0714 20:35:46.333704 139841818478464 basic_session_run_hooks.py:260] loss = 2.2956448, step = 15200 (11.074 sec)\n","INFO:tensorflow:global_step/sec: 8.83568\n","I0714 20:35:57.650261 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.83568\n","INFO:tensorflow:loss = 1.9432131, step = 15300 (11.318 sec)\n","I0714 20:35:57.651441 139841818478464 basic_session_run_hooks.py:260] loss = 1.9432131, step = 15300 (11.318 sec)\n","INFO:tensorflow:global_step/sec: 8.8848\n","I0714 20:36:08.905464 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.8848\n","INFO:tensorflow:loss = 2.5656903, step = 15400 (11.255 sec)\n","I0714 20:36:08.906726 139841818478464 basic_session_run_hooks.py:260] loss = 2.5656903, step = 15400 (11.255 sec)\n","INFO:tensorflow:global_step/sec: 8.75129\n","I0714 20:36:20.332305 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.75129\n","INFO:tensorflow:loss = 1.645396, step = 15500 (11.427 sec)\n","I0714 20:36:20.333656 139841818478464 basic_session_run_hooks.py:260] loss = 1.645396, step = 15500 (11.427 sec)\n","INFO:tensorflow:global_step/sec: 8.89653\n","I0714 20:36:31.572609 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.89653\n","INFO:tensorflow:loss = 4.4406724, step = 15600 (11.240 sec)\n","I0714 20:36:31.573828 139841818478464 basic_session_run_hooks.py:260] loss = 4.4406724, step = 15600 (11.240 sec)\n","INFO:tensorflow:global_step/sec: 8.95996\n","I0714 20:36:42.733397 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.95996\n","INFO:tensorflow:loss = 3.1126046, step = 15700 (11.161 sec)\n","I0714 20:36:42.734733 139841818478464 basic_session_run_hooks.py:260] loss = 3.1126046, step = 15700 (11.161 sec)\n","INFO:tensorflow:global_step/sec: 8.81846\n","I0714 20:36:54.073259 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 8.81846\n","INFO:tensorflow:loss = 10.055735, step = 15800 (11.340 sec)\n","I0714 20:36:54.074612 139841818478464 basic_session_run_hooks.py:260] loss = 10.055735, step = 15800 (11.340 sec)\n","INFO:tensorflow:Saving checkpoints for 15888 into data_one/output/model.ckpt.\n","I0714 20:37:03.979995 139841818478464 basic_session_run_hooks.py:606] Saving checkpoints for 15888 into data_one/output/model.ckpt.\n","INFO:tensorflow:Calling model_fn.\n","I0714 20:37:06.172778 139841818478464 estimator.py:1148] Calling model_fn.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:08.007235 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:08.043987 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:08.079876 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:08.115890 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:08.151516 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:08.187213 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:Done calling model_fn.\n","I0714 20:37:09.791941 139841818478464 estimator.py:1150] Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2020-07-14T20:37:09Z\n","I0714 20:37:09.812690 139841818478464 evaluation.py:255] Starting evaluation at 2020-07-14T20:37:09Z\n","INFO:tensorflow:Graph was finalized.\n","I0714 20:37:10.156141 139841818478464 monitored_session.py:240] Graph was finalized.\n","2020-07-14 20:37:10.157101: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:10.157469: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:37:10.157575: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:37:10.157636: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:37:10.157682: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:37:10.157740: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:37:10.157782: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:37:10.157824: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:37:10.157872: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:37:10.158015: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:10.158418: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:10.158696: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:37:10.158830: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:37:10.158853: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:37:10.158868: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:37:10.159039: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:10.159430: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:10.159709: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-15888\n","I0714 20:37:10.162212 139841818478464 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-15888\n","INFO:tensorflow:Running local_init_op.\n","I0714 20:37:10.961544 139841818478464 session_manager.py:500] Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","I0714 20:37:11.086627 139841818478464 session_manager.py:502] Done running local_init_op.\n","INFO:tensorflow:Performing evaluation on 7 images.\n","I0714 20:37:13.368302 139838559655680 coco_evaluation.py:237] Performing evaluation on 7 images.\n","creating index...\n","index created!\n","INFO:tensorflow:Loading and preparing annotation results...\n","I0714 20:37:13.368783 139838559655680 coco_tools.py:116] Loading and preparing annotation results...\n","INFO:tensorflow:DONE (t=0.00s)\n","I0714 20:37:13.369569 139838559655680 coco_tools.py:138] DONE (t=0.00s)\n","creating index...\n","index created!\n","Running per image evaluation...\n","Evaluate annotation type *bbox*\n","DONE (t=0.07s).\n","Accumulating evaluation results...\n","DONE (t=0.01s).\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.675\n"," Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 1.000\n"," Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.791\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.675\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.729\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.729\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.729\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.729\n","INFO:tensorflow:Finished evaluation at 2020-07-14-20:37:14\n","I0714 20:37:14.200362 139841818478464 evaluation.py:275] Finished evaluation at 2020-07-14-20:37:14\n","INFO:tensorflow:Saving dict for global step 15888: DetectionBoxes_Precision/mAP = 0.6748704, DetectionBoxes_Precision/mAP (large) = 0.6748704, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 1.0, DetectionBoxes_Precision/mAP@.75IOU = 0.7906648, DetectionBoxes_Recall/AR@1 = 0.7285714, DetectionBoxes_Recall/AR@10 = 0.7285714, DetectionBoxes_Recall/AR@100 = 0.7285714, DetectionBoxes_Recall/AR@100 (large) = 0.7285714, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 0.65751344, Loss/localization_loss = 0.29174376, Loss/regularization_loss = 0.54498905, Loss/total_loss = 1.4942462, global_step = 15888, learning_rate = 0.004, loss = 1.4942462\n","I0714 20:37:14.200769 139841818478464 estimator.py:2049] Saving dict for global step 15888: DetectionBoxes_Precision/mAP = 0.6748704, DetectionBoxes_Precision/mAP (large) = 0.6748704, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 1.0, DetectionBoxes_Precision/mAP@.75IOU = 0.7906648, DetectionBoxes_Recall/AR@1 = 0.7285714, DetectionBoxes_Recall/AR@10 = 0.7285714, DetectionBoxes_Recall/AR@100 = 0.7285714, DetectionBoxes_Recall/AR@100 (large) = 0.7285714, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 0.65751344, Loss/localization_loss = 0.29174376, Loss/regularization_loss = 0.54498905, Loss/total_loss = 1.4942462, global_step = 15888, learning_rate = 0.004, loss = 1.4942462\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 15888: data_one/output/model.ckpt-15888\n","I0714 20:37:14.205773 139841818478464 estimator.py:2109] Saving 'checkpoint_path' summary for global step 15888: data_one/output/model.ckpt-15888\n","INFO:tensorflow:global_step/sec: 4.55108\n","I0714 20:37:16.046112 139841818478464 basic_session_run_hooks.py:692] global_step/sec: 4.55108\n","INFO:tensorflow:loss = 10.104846, step = 15900 (21.973 sec)\n","I0714 20:37:16.047424 139841818478464 basic_session_run_hooks.py:260] loss = 10.104846, step = 15900 (21.973 sec)\n","INFO:tensorflow:Saving checkpoints for 16000 into data_one/output/model.ckpt.\n","I0714 20:37:27.893824 139841818478464 basic_session_run_hooks.py:606] Saving checkpoints for 16000 into data_one/output/model.ckpt.\n","INFO:tensorflow:Skip the current checkpoint eval due to throttle secs (600 secs).\n","I0714 20:37:29.160571 139841818478464 training.py:527] Skip the current checkpoint eval due to throttle secs (600 secs).\n","INFO:tensorflow:Calling model_fn.\n","I0714 20:37:30.106614 139841818478464 estimator.py:1148] Calling model_fn.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:31.940383 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:31.978577 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:32.019323 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:32.055542 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:32.092931 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:32.134957 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:Done calling model_fn.\n","I0714 20:37:34.288152 139841818478464 estimator.py:1150] Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2020-07-14T20:37:34Z\n","I0714 20:37:34.313597 139841818478464 evaluation.py:255] Starting evaluation at 2020-07-14T20:37:34Z\n","INFO:tensorflow:Graph was finalized.\n","I0714 20:37:34.800827 139841818478464 monitored_session.py:240] Graph was finalized.\n","2020-07-14 20:37:34.801746: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:34.802134: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:37:34.802228: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:37:34.802278: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:37:34.802323: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:37:34.802370: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:37:34.802414: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:37:34.802455: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:37:34.802499: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:37:34.802646: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:34.803018: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:34.803301: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:37:34.803354: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:37:34.803377: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:37:34.803393: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:37:34.803552: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:34.803926: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:34.804244: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-16000\n","I0714 20:37:34.806661 139841818478464 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-16000\n","INFO:tensorflow:Running local_init_op.\n","I0714 20:37:35.647977 139841818478464 session_manager.py:500] Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","I0714 20:37:35.796203 139841818478464 session_manager.py:502] Done running local_init_op.\n","INFO:tensorflow:Performing evaluation on 7 images.\n","I0714 20:37:38.128969 139838551262976 coco_evaluation.py:237] Performing evaluation on 7 images.\n","creating index...\n","index created!\n","INFO:tensorflow:Loading and preparing annotation results...\n","I0714 20:37:38.129412 139838551262976 coco_tools.py:116] Loading and preparing annotation results...\n","INFO:tensorflow:DONE (t=0.00s)\n","I0714 20:37:38.130380 139838551262976 coco_tools.py:138] DONE (t=0.00s)\n","creating index...\n","index created!\n","Running per image evaluation...\n","Evaluate annotation type *bbox*\n","DONE (t=0.07s).\n","Accumulating evaluation results...\n","DONE (t=0.01s).\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.668\n"," Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 1.000\n"," Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.668\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.714\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.714\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.714\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = -1.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.714\n","INFO:tensorflow:Finished evaluation at 2020-07-14-20:37:38\n","I0714 20:37:38.797947 139841818478464 evaluation.py:275] Finished evaluation at 2020-07-14-20:37:38\n","INFO:tensorflow:Saving dict for global step 16000: DetectionBoxes_Precision/mAP = 0.6680693, DetectionBoxes_Precision/mAP (large) = 0.6680693, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 1.0, DetectionBoxes_Precision/mAP@.75IOU = 1.0, DetectionBoxes_Recall/AR@1 = 0.71428573, DetectionBoxes_Recall/AR@10 = 0.71428573, DetectionBoxes_Recall/AR@100 = 0.71428573, DetectionBoxes_Recall/AR@100 (large) = 0.71428573, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 0.17310646, Loss/localization_loss = 0.19859144, Loss/regularization_loss = 0.54510957, Loss/total_loss = 0.9168075, global_step = 16000, learning_rate = 0.004, loss = 0.9168075\n","I0714 20:37:38.798294 139841818478464 estimator.py:2049] Saving dict for global step 16000: DetectionBoxes_Precision/mAP = 0.6680693, DetectionBoxes_Precision/mAP (large) = 0.6680693, DetectionBoxes_Precision/mAP (medium) = -1.0, DetectionBoxes_Precision/mAP (small) = -1.0, DetectionBoxes_Precision/mAP@.50IOU = 1.0, DetectionBoxes_Precision/mAP@.75IOU = 1.0, DetectionBoxes_Recall/AR@1 = 0.71428573, DetectionBoxes_Recall/AR@10 = 0.71428573, DetectionBoxes_Recall/AR@100 = 0.71428573, DetectionBoxes_Recall/AR@100 (large) = 0.71428573, DetectionBoxes_Recall/AR@100 (medium) = -1.0, DetectionBoxes_Recall/AR@100 (small) = -1.0, Loss/classification_loss = 0.17310646, Loss/localization_loss = 0.19859144, Loss/regularization_loss = 0.54510957, Loss/total_loss = 0.9168075, global_step = 16000, learning_rate = 0.004, loss = 0.9168075\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 16000: data_one/output/model.ckpt-16000\n","I0714 20:37:38.802019 139841818478464 estimator.py:2109] Saving 'checkpoint_path' summary for global step 16000: data_one/output/model.ckpt-16000\n","INFO:tensorflow:Performing the final export in the end of training.\n","I0714 20:37:38.803541 139841818478464 exporter.py:410] Performing the final export in the end of training.\n","INFO:tensorflow:Calling model_fn.\n","I0714 20:37:39.127133 139841818478464 estimator.py:1148] Calling model_fn.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:40.942830 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:40.980348 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:41.016882 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:41.054549 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:41.090958 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:37:41.127858 139841818478464 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:Done calling model_fn.\n","I0714 20:37:41.825462 139841818478464 estimator.py:1150] Done calling model_fn.\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/saved_model/signature_def_utils_impl.py:201: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.\n","W0714 20:37:41.825789 139841818478464 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/saved_model/signature_def_utils_impl.py:201: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.\n","INFO:tensorflow:Signatures INCLUDED in export for Classify: None\n","I0714 20:37:41.826822 139841818478464 export_utils.py:170] Signatures INCLUDED in export for Classify: None\n","INFO:tensorflow:Signatures INCLUDED in export for Regress: None\n","I0714 20:37:41.826978 139841818478464 export_utils.py:170] Signatures INCLUDED in export for Regress: None\n","INFO:tensorflow:Signatures INCLUDED in export for Predict: ['tensorflow/serving/predict', 'serving_default']\n","I0714 20:37:41.827132 139841818478464 export_utils.py:170] Signatures INCLUDED in export for Predict: ['tensorflow/serving/predict', 'serving_default']\n","INFO:tensorflow:Signatures INCLUDED in export for Train: None\n","I0714 20:37:41.827259 139841818478464 export_utils.py:170] Signatures INCLUDED in export for Train: None\n","INFO:tensorflow:Signatures INCLUDED in export for Eval: None\n","I0714 20:37:41.827376 139841818478464 export_utils.py:170] Signatures INCLUDED in export for Eval: None\n","2020-07-14 20:37:41.828098: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:41.828573: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:37:41.828687: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:37:41.828736: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:37:41.828779: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:37:41.828821: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:37:41.828861: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:37:41.828903: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:37:41.828944: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:37:41.829129: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:41.829665: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:41.829987: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:37:41.830069: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:37:41.830098: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:37:41.830119: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:37:41.830307: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:41.830717: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:37:41.831017: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-16000\n","I0714 20:37:41.835660 139841818478464 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-16000\n","INFO:tensorflow:Assets added to graph.\n","I0714 20:37:42.238343 139841818478464 builder_impl.py:665] Assets added to graph.\n","INFO:tensorflow:No assets to write.\n","I0714 20:37:42.238584 139841818478464 builder_impl.py:460] No assets to write.\n","INFO:tensorflow:SavedModel written to: data_one/output/export/Servo/temp-b'1594759058'/saved_model.pb\n","I0714 20:37:43.007225 139841818478464 builder_impl.py:425] SavedModel written to: data_one/output/export/Servo/temp-b'1594759058'/saved_model.pb\n","INFO:tensorflow:Loss for final step: 2.8444939.\n","I0714 20:37:43.263394 139841818478464 estimator.py:371] Loss for final step: 2.8444939.\n","CPU times: user 5.28 s, sys: 1.1 s, total: 6.37 s\n","Wall time: 31min 41s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"c0yPm_gvzjz0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1594759160405,"user_tz":-180,"elapsed":28930,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"a4bd8d8b-19d2-44ab-9ba7-e4ebb3b15c5f"},"source":["!export PYTHONPATH=$PYTHONPATH:models/research:models/research/slim ; python models/research/object_detection/export_inference_graph.py \\\n","    --input_type=image_tensor \\\n","    --pipeline_config_path=data_one/pipeline.config \\\n","    --trained_checkpoint_prefix=data_one/output/model.ckpt-16000 \\\n","    --output_directory=data_one/output/frozen/!export PYTHONPATH=$PYTHONPATH:models/research:models/research/slim ; python models/research/object_detection/export_inference_graph.py \\\n","    --input_type=image_tensor \\\n","    --pipeline_config_path=data_one/pipeline.config \\\n","    --trained_checkpoint_prefix=data_one/output/model.ckpt-16000 \\\n","    --output_directory=data_one/output/frozen/"],"execution_count":53,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tf_slim/layers/layers.py:1089: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `layer.__call__` method instead.\n","W0714 20:38:53.438614 140564954859392 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tf_slim/layers/layers.py:1089: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `layer.__call__` method instead.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:38:55.263658 140564954859392 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:38:55.309914 140564954859392 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:38:55.354825 140564954859392 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:38:55.399738 140564954859392 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:38:55.444922 140564954859392 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:38:55.492181 140564954859392 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/core/post_processing.py:583: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","W0714 20:38:55.838215 140564954859392 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/core/post_processing.py:583: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:474: get_or_create_global_step (from tf_slim.ops.variables) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please switch to tf.train.get_or_create_global_step\n","W0714 20:38:56.366198 140564954859392 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:474: get_or_create_global_step (from tf_slim.ops.variables) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please switch to tf.train.get_or_create_global_step\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:653: print_model_analysis (from tensorflow.contrib.tfprof.model_analyzer) is deprecated and will be removed after 2018-01-01.\n","Instructions for updating:\n","Use `tf.profiler.profile(graph, run_meta, op_log, cmd, options)`. Build `options` with `tf.profiler.ProfileOptionBuilder`. See README.md for details\n","W0714 20:38:56.370260 140564954859392 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:653: print_model_analysis (from tensorflow.contrib.tfprof.model_analyzer) is deprecated and will be removed after 2018-01-01.\n","Instructions for updating:\n","Use `tf.profiler.profile(graph, run_meta, op_log, cmd, options)`. Build `options` with `tf.profiler.ProfileOptionBuilder`. See README.md for details\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/profiler/internal/flops_registry.py:142: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`\n","W0714 20:38:56.370851 140564954859392 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/profiler/internal/flops_registry.py:142: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`\n","108 ops no flops stats due to incomplete shapes.\n","Parsing Inputs...\n","Incomplete shape.\n","\n","=========================Options=============================\n","-max_depth                  10000\n","-min_bytes                  0\n","-min_peak_bytes             0\n","-min_residual_bytes         0\n","-min_output_bytes           0\n","-min_micros                 0\n","-min_accelerator_micros     0\n","-min_cpu_micros             0\n","-min_params                 0\n","-min_float_ops              0\n","-min_occurrence             0\n","-step                       -1\n","-order_by                   name\n","-account_type_regexes       _trainable_variables\n","-start_name_regexes         .*\n","-trim_name_regexes          .*BatchNorm.*\n","-show_name_regexes          .*\n","-hide_name_regexes          \n","-account_displayed_op_only  true\n","-select                     params\n","-output                     stdout:\n","\n","==================Model Analysis Report======================\n","Incomplete shape.\n","\n","Doc:\n","scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.\n","param: Number of parameters (in the Variable).\n","\n","Profile:\n","node name | # parameters\n","_TFProfRoot (--/5.49m params)\n","  BoxPredictor_0 (--/9.23k params)\n","    BoxPredictor_0/BoxEncodingPredictor (--/6.16k params)\n","      BoxPredictor_0/BoxEncodingPredictor/biases (12, 12/12 params)\n","      BoxPredictor_0/BoxEncodingPredictor/weights (1x1x512x12, 6.14k/6.14k params)\n","    BoxPredictor_0/ClassPredictor (--/3.08k params)\n","      BoxPredictor_0/ClassPredictor/biases (6, 6/6 params)\n","      BoxPredictor_0/ClassPredictor/weights (1x1x512x6, 3.07k/3.07k params)\n","  BoxPredictor_1 (--/36.90k params)\n","    BoxPredictor_1/BoxEncodingPredictor (--/24.60k params)\n","      BoxPredictor_1/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_1/BoxEncodingPredictor/weights (1x1x1024x24, 24.58k/24.58k params)\n","    BoxPredictor_1/ClassPredictor (--/12.30k params)\n","      BoxPredictor_1/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_1/ClassPredictor/weights (1x1x1024x12, 12.29k/12.29k params)\n","  BoxPredictor_2 (--/18.47k params)\n","    BoxPredictor_2/BoxEncodingPredictor (--/12.31k params)\n","      BoxPredictor_2/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_2/BoxEncodingPredictor/weights (1x1x512x24, 12.29k/12.29k params)\n","    BoxPredictor_2/ClassPredictor (--/6.16k params)\n","      BoxPredictor_2/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_2/ClassPredictor/weights (1x1x512x12, 6.14k/6.14k params)\n","  BoxPredictor_3 (--/9.25k params)\n","    BoxPredictor_3/BoxEncodingPredictor (--/6.17k params)\n","      BoxPredictor_3/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_3/BoxEncodingPredictor/weights (1x1x256x24, 6.14k/6.14k params)\n","    BoxPredictor_3/ClassPredictor (--/3.08k params)\n","      BoxPredictor_3/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_3/ClassPredictor/weights (1x1x256x12, 3.07k/3.07k params)\n","  BoxPredictor_4 (--/9.25k params)\n","    BoxPredictor_4/BoxEncodingPredictor (--/6.17k params)\n","      BoxPredictor_4/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_4/BoxEncodingPredictor/weights (1x1x256x24, 6.14k/6.14k params)\n","    BoxPredictor_4/ClassPredictor (--/3.08k params)\n","      BoxPredictor_4/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_4/ClassPredictor/weights (1x1x256x12, 3.07k/3.07k params)\n","  BoxPredictor_5 (--/4.64k params)\n","    BoxPredictor_5/BoxEncodingPredictor (--/3.10k params)\n","      BoxPredictor_5/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_5/BoxEncodingPredictor/weights (1x1x128x24, 3.07k/3.07k params)\n","    BoxPredictor_5/ClassPredictor (--/1.55k params)\n","      BoxPredictor_5/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_5/ClassPredictor/weights (1x1x128x12, 1.54k/1.54k params)\n","  FeatureExtractor (--/5.41m params)\n","    FeatureExtractor/MobilenetV1 (--/5.41m params)\n","      FeatureExtractor/MobilenetV1/Conv2d_0 (--/864 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_0/weights (3x3x3x32, 864/864 params)\n","      FeatureExtractor/MobilenetV1/Conv2d_10_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_10_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_11_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_11_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_12_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_12_pointwise (--/524.29k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights (1x1x512x1024, 524.29k/524.29k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_depthwise (--/9.22k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights (3x3x1024x1, 9.22k/9.22k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise (--/1.05m params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights (1x1x1024x1024, 1.05m/1.05m params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256 (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/weights (1x1x1024x256, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128 (--/65.54k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/weights (1x1x512x128, 65.54k/65.54k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128 (--/32.77k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/weights (1x1x256x128, 32.77k/32.77k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64 (--/16.38k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/weights (1x1x256x64, 16.38k/16.38k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512 (--/1.18m params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/weights (3x3x256x512, 1.18m/1.18m params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256 (--/294.91k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/weights (3x3x128x256, 294.91k/294.91k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256 (--/294.91k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/weights (3x3x128x256, 294.91k/294.91k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128 (--/73.73k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/weights (3x3x64x128, 73.73k/73.73k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_1_depthwise (--/288 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights (3x3x32x1, 288/288 params)\n","      FeatureExtractor/MobilenetV1/Conv2d_1_pointwise (--/2.05k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights (1x1x32x64, 2.05k/2.05k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_2_depthwise (--/576 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights (3x3x64x1, 576/576 params)\n","      FeatureExtractor/MobilenetV1/Conv2d_2_pointwise (--/8.19k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights (1x1x64x128, 8.19k/8.19k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_3_depthwise (--/1.15k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights (3x3x128x1, 1.15k/1.15k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_3_pointwise (--/16.38k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights (1x1x128x128, 16.38k/16.38k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_4_depthwise (--/1.15k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights (3x3x128x1, 1.15k/1.15k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_4_pointwise (--/32.77k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights (1x1x128x256, 32.77k/32.77k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_5_depthwise (--/2.30k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights (3x3x256x1, 2.30k/2.30k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_5_pointwise (--/65.54k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights (1x1x256x256, 65.54k/65.54k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_6_depthwise (--/2.30k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights (3x3x256x1, 2.30k/2.30k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_6_pointwise (--/131.07k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights (1x1x256x512, 131.07k/131.07k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_7_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_7_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_8_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_8_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_9_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_9_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","\n","======================End of Report==========================\n","108 ops no flops stats due to incomplete shapes.\n","Parsing Inputs...\n","Incomplete shape.\n","\n","=========================Options=============================\n","-max_depth                  10000\n","-min_bytes                  0\n","-min_peak_bytes             0\n","-min_residual_bytes         0\n","-min_output_bytes           0\n","-min_micros                 0\n","-min_accelerator_micros     0\n","-min_cpu_micros             0\n","-min_params                 0\n","-min_float_ops              1\n","-min_occurrence             0\n","-step                       -1\n","-order_by                   float_ops\n","-account_type_regexes       .*\n","-start_name_regexes         .*\n","-trim_name_regexes          .*BatchNorm.*,.*Initializer.*,.*Regularizer.*,.*BiasAdd.*\n","-show_name_regexes          .*\n","-hide_name_regexes          \n","-account_displayed_op_only  true\n","-select                     float_ops\n","-output                     stdout:\n","\n","==================Model Analysis Report======================\n","Incomplete shape.\n","\n","Doc:\n","scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.\n","flops: Number of float operations. Note: Please read the implementation for the math behind it.\n","\n","Profile:\n","node name | # float_ops\n","_TFProfRoot (--/5.41k flops)\n","  MultipleGridAnchorGenerator/sub (798/798 flops)\n","  MultipleGridAnchorGenerator/mul_20 (798/798 flops)\n","  MultipleGridAnchorGenerator/mul_19 (798/798 flops)\n","  MultipleGridAnchorGenerator/mul_28 (480/480 flops)\n","  MultipleGridAnchorGenerator/sub_1 (480/480 flops)\n","  MultipleGridAnchorGenerator/mul_27 (480/480 flops)\n","  MultipleGridAnchorGenerator/mul_21 (399/399 flops)\n","  MultipleGridAnchorGenerator/mul_29 (240/240 flops)\n","  MultipleGridAnchorGenerator/mul_35 (120/120 flops)\n","  MultipleGridAnchorGenerator/mul_36 (120/120 flops)\n","  MultipleGridAnchorGenerator/sub_2 (120/120 flops)\n","  MultipleGridAnchorGenerator/mul_37 (60/60 flops)\n","  MultipleGridAnchorGenerator/mul_44 (36/36 flops)\n","  MultipleGridAnchorGenerator/mul_43 (36/36 flops)\n","  MultipleGridAnchorGenerator/sub_3 (36/36 flops)\n","  MultipleGridAnchorGenerator/mul_52 (24/24 flops)\n","  MultipleGridAnchorGenerator/mul_51 (24/24 flops)\n","  MultipleGridAnchorGenerator/sub_4 (24/24 flops)\n","  MultipleGridAnchorGenerator/mul_18 (19/19 flops)\n","  MultipleGridAnchorGenerator/mul_45 (18/18 flops)\n","  MultipleGridAnchorGenerator/mul_60 (12/12 flops)\n","  MultipleGridAnchorGenerator/mul_53 (12/12 flops)\n","  MultipleGridAnchorGenerator/sub_5 (12/12 flops)\n","  MultipleGridAnchorGenerator/mul_59 (12/12 flops)\n","  MultipleGridAnchorGenerator/mul_26 (10/10 flops)\n","  MultipleGridAnchorGenerator/mul_17 (7/7 flops)\n","  MultipleGridAnchorGenerator/truediv_16 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_31 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_40 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_46 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_47 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_48 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_17 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_61 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_54 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_55 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_56 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_39 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_18 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_22 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_23 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_24 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_30 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_32 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_19 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_38 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_15 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_34 (5/5 flops)\n","  MultipleGridAnchorGenerator/mul_25 (4/4 flops)\n","  MultipleGridAnchorGenerator/mul_42 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_16 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_15 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_14 (3/3 flops)\n","  MultipleGridAnchorGenerator/truediv_14 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_33 (2/2 flops)\n","  MultipleGridAnchorGenerator/mul_50 (2/2 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_3 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_8 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_9 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_7 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_6 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_5 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_4 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_2 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Equal (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Equal (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1 (1/1 flops)\n","  Preprocessor/map/while/Less_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_19 (1/1 flops)\n","  MultipleGridAnchorGenerator/Minimum (1/1 flops)\n","  Preprocessor/map/while/Less (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/ones/Less (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_9 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_8 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_7 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_6 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_5 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_4 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_3 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_2 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_18 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_17 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_16 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_15 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_14 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_13 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_12 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_11 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_10 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_1 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_4 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_9 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_8 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_7 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_6 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_58 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_57 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_5 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_49 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_41 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_3 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_2 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_13 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_12 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_11 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_10 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_1 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul (1/1 flops)\n","  MultipleGridAnchorGenerator/assert_equal_1/Equal (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_6 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_9 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_8 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_7 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Greater (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_5 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_4 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_3 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_2 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_13 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_12 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_11 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_10 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_1 (1/1 flops)\n","\n","======================End of Report==========================\n","2020-07-14 20:38:58.092571: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1\n","2020-07-14 20:38:58.095535: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.096116: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:38:58.096396: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:38:58.098272: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:38:58.100017: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:38:58.100389: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:38:58.102505: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:38:58.103666: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:38:58.108022: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:38:58.108230: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.108931: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.109483: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:38:58.115379: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2300000000 Hz\n","2020-07-14 20:38:58.115646: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x27c79c0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\n","2020-07-14 20:38:58.115683: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\n","2020-07-14 20:38:58.166523: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.167231: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x27c7800 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n","2020-07-14 20:38:58.167269: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla K80, Compute Capability 3.7\n","2020-07-14 20:38:58.167493: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.168006: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:38:58.168120: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:38:58.168167: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:38:58.168219: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:38:58.168262: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:38:58.168304: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:38:58.168358: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:38:58.168408: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:38:58.168545: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.169160: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.169662: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:38:58.169729: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:38:58.171185: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:38:58.171219: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:38:58.171236: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:38:58.171413: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.172012: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:58.172547: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\n","2020-07-14 20:38:58.172601: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-16000\n","I0714 20:38:58.176191 140564954859392 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-16000\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:127: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use standard file APIs to check for files with this prefix.\n","W0714 20:38:59.202465 140564954859392 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:127: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use standard file APIs to check for files with this prefix.\n","2020-07-14 20:38:59.908805: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:59.909481: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:38:59.909582: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:38:59.909629: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:38:59.909673: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:38:59.909713: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:38:59.909761: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:38:59.909802: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:38:59.909842: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:38:59.909987: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:59.910609: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:59.911131: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:38:59.911184: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:38:59.911208: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:38:59.911223: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:38:59.911382: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:59.911971: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:38:59.912500: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-16000\n","I0714 20:38:59.915021 140564954859392 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-16000\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:233: convert_variables_to_constants (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.convert_variables_to_constants`\n","W0714 20:39:00.856472 140564954859392 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:233: convert_variables_to_constants (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.convert_variables_to_constants`\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/framework/graph_util_impl.py:277: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.extract_sub_graph`\n","W0714 20:39:00.856763 140564954859392 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/framework/graph_util_impl.py:277: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.extract_sub_graph`\n","INFO:tensorflow:Froze 199 variables.\n","I0714 20:39:01.126142 140564954859392 graph_util_impl.py:334] Froze 199 variables.\n","INFO:tensorflow:Converted 199 variables to const ops.\n","I0714 20:39:01.208613 140564954859392 graph_util_impl.py:394] Converted 199 variables to const ops.\n","2020-07-14 20:39:01.376012: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:01.376621: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:39:01.376708: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:39:01.376752: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:39:01.376796: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:39:01.376838: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:39:01.376879: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:39:01.376918: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:39:01.376968: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:39:01.377145: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:01.377733: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:01.378378: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:39:01.378430: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:39:01.378460: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:39:01.378478: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:39:01.378629: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:01.379240: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:01.379743: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:384: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.\n","W0714 20:39:01.786575 140564954859392 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:384: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.\n","INFO:tensorflow:No assets to save.\n","I0714 20:39:01.787747 140564954859392 builder_impl.py:640] No assets to save.\n","INFO:tensorflow:No assets to write.\n","I0714 20:39:01.787948 140564954859392 builder_impl.py:460] No assets to write.\n","INFO:tensorflow:SavedModel written to: data_one/output/frozen/!export/saved_model/saved_model.pb\n","I0714 20:39:02.099860 140564954859392 builder_impl.py:425] SavedModel written to: data_one/output/frozen/!export/saved_model/saved_model.pb\n","INFO:tensorflow:Writing pipeline config file to data_one/output/frozen/!export/pipeline.config\n","I0714 20:39:02.126957 140564954859392 config_util.py:254] Writing pipeline config file to data_one/output/frozen/!export/pipeline.config\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tf_slim/layers/layers.py:1089: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `layer.__call__` method instead.\n","W0714 20:39:06.980319 140384994174848 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tf_slim/layers/layers.py:1089: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `layer.__call__` method instead.\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:39:08.924508 140384994174848 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:39:08.971355 140384994174848 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:39:09.017323 140384994174848 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:39:09.062540 140384994174848 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:39:09.108812 140384994174848 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","INFO:tensorflow:depth of additional conv before box predictor: 0\n","I0714 20:39:09.155797 140384994174848 convolutional_box_predictor.py:156] depth of additional conv before box predictor: 0\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/core/post_processing.py:583: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","W0714 20:39:09.474545 140384994174848 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/core/post_processing.py:583: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:474: get_or_create_global_step (from tf_slim.ops.variables) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please switch to tf.train.get_or_create_global_step\n","W0714 20:39:09.978434 140384994174848 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:474: get_or_create_global_step (from tf_slim.ops.variables) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please switch to tf.train.get_or_create_global_step\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:653: print_model_analysis (from tensorflow.contrib.tfprof.model_analyzer) is deprecated and will be removed after 2018-01-01.\n","Instructions for updating:\n","Use `tf.profiler.profile(graph, run_meta, op_log, cmd, options)`. Build `options` with `tf.profiler.ProfileOptionBuilder`. See README.md for details\n","W0714 20:39:09.982329 140384994174848 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:653: print_model_analysis (from tensorflow.contrib.tfprof.model_analyzer) is deprecated and will be removed after 2018-01-01.\n","Instructions for updating:\n","Use `tf.profiler.profile(graph, run_meta, op_log, cmd, options)`. Build `options` with `tf.profiler.ProfileOptionBuilder`. See README.md for details\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/profiler/internal/flops_registry.py:142: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`\n","W0714 20:39:09.982937 140384994174848 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/profiler/internal/flops_registry.py:142: tensor_shape_from_node_def_name (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.tensor_shape_from_node_def_name`\n","108 ops no flops stats due to incomplete shapes.\n","Parsing Inputs...\n","Incomplete shape.\n","\n","=========================Options=============================\n","-max_depth                  10000\n","-min_bytes                  0\n","-min_peak_bytes             0\n","-min_residual_bytes         0\n","-min_output_bytes           0\n","-min_micros                 0\n","-min_accelerator_micros     0\n","-min_cpu_micros             0\n","-min_params                 0\n","-min_float_ops              0\n","-min_occurrence             0\n","-step                       -1\n","-order_by                   name\n","-account_type_regexes       _trainable_variables\n","-start_name_regexes         .*\n","-trim_name_regexes          .*BatchNorm.*\n","-show_name_regexes          .*\n","-hide_name_regexes          \n","-account_displayed_op_only  true\n","-select                     params\n","-output                     stdout:\n","\n","==================Model Analysis Report======================\n","Incomplete shape.\n","\n","Doc:\n","scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.\n","param: Number of parameters (in the Variable).\n","\n","Profile:\n","node name | # parameters\n","_TFProfRoot (--/5.49m params)\n","  BoxPredictor_0 (--/9.23k params)\n","    BoxPredictor_0/BoxEncodingPredictor (--/6.16k params)\n","      BoxPredictor_0/BoxEncodingPredictor/biases (12, 12/12 params)\n","      BoxPredictor_0/BoxEncodingPredictor/weights (1x1x512x12, 6.14k/6.14k params)\n","    BoxPredictor_0/ClassPredictor (--/3.08k params)\n","      BoxPredictor_0/ClassPredictor/biases (6, 6/6 params)\n","      BoxPredictor_0/ClassPredictor/weights (1x1x512x6, 3.07k/3.07k params)\n","  BoxPredictor_1 (--/36.90k params)\n","    BoxPredictor_1/BoxEncodingPredictor (--/24.60k params)\n","      BoxPredictor_1/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_1/BoxEncodingPredictor/weights (1x1x1024x24, 24.58k/24.58k params)\n","    BoxPredictor_1/ClassPredictor (--/12.30k params)\n","      BoxPredictor_1/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_1/ClassPredictor/weights (1x1x1024x12, 12.29k/12.29k params)\n","  BoxPredictor_2 (--/18.47k params)\n","    BoxPredictor_2/BoxEncodingPredictor (--/12.31k params)\n","      BoxPredictor_2/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_2/BoxEncodingPredictor/weights (1x1x512x24, 12.29k/12.29k params)\n","    BoxPredictor_2/ClassPredictor (--/6.16k params)\n","      BoxPredictor_2/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_2/ClassPredictor/weights (1x1x512x12, 6.14k/6.14k params)\n","  BoxPredictor_3 (--/9.25k params)\n","    BoxPredictor_3/BoxEncodingPredictor (--/6.17k params)\n","      BoxPredictor_3/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_3/BoxEncodingPredictor/weights (1x1x256x24, 6.14k/6.14k params)\n","    BoxPredictor_3/ClassPredictor (--/3.08k params)\n","      BoxPredictor_3/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_3/ClassPredictor/weights (1x1x256x12, 3.07k/3.07k params)\n","  BoxPredictor_4 (--/9.25k params)\n","    BoxPredictor_4/BoxEncodingPredictor (--/6.17k params)\n","      BoxPredictor_4/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_4/BoxEncodingPredictor/weights (1x1x256x24, 6.14k/6.14k params)\n","    BoxPredictor_4/ClassPredictor (--/3.08k params)\n","      BoxPredictor_4/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_4/ClassPredictor/weights (1x1x256x12, 3.07k/3.07k params)\n","  BoxPredictor_5 (--/4.64k params)\n","    BoxPredictor_5/BoxEncodingPredictor (--/3.10k params)\n","      BoxPredictor_5/BoxEncodingPredictor/biases (24, 24/24 params)\n","      BoxPredictor_5/BoxEncodingPredictor/weights (1x1x128x24, 3.07k/3.07k params)\n","    BoxPredictor_5/ClassPredictor (--/1.55k params)\n","      BoxPredictor_5/ClassPredictor/biases (12, 12/12 params)\n","      BoxPredictor_5/ClassPredictor/weights (1x1x128x12, 1.54k/1.54k params)\n","  FeatureExtractor (--/5.41m params)\n","    FeatureExtractor/MobilenetV1 (--/5.41m params)\n","      FeatureExtractor/MobilenetV1/Conv2d_0 (--/864 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_0/weights (3x3x3x32, 864/864 params)\n","      FeatureExtractor/MobilenetV1/Conv2d_10_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_10_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_11_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_11_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_12_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_12_pointwise (--/524.29k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights (1x1x512x1024, 524.29k/524.29k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_depthwise (--/9.22k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights (3x3x1024x1, 9.22k/9.22k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise (--/1.05m params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights (1x1x1024x1024, 1.05m/1.05m params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256 (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/weights (1x1x1024x256, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128 (--/65.54k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/weights (1x1x512x128, 65.54k/65.54k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128 (--/32.77k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/weights (1x1x256x128, 32.77k/32.77k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64 (--/16.38k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/weights (1x1x256x64, 16.38k/16.38k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512 (--/1.18m params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/weights (3x3x256x512, 1.18m/1.18m params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256 (--/294.91k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/weights (3x3x128x256, 294.91k/294.91k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256 (--/294.91k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/weights (3x3x128x256, 294.91k/294.91k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128 (--/73.73k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/weights (3x3x64x128, 73.73k/73.73k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_1_depthwise (--/288 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights (3x3x32x1, 288/288 params)\n","      FeatureExtractor/MobilenetV1/Conv2d_1_pointwise (--/2.05k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights (1x1x32x64, 2.05k/2.05k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_2_depthwise (--/576 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights (3x3x64x1, 576/576 params)\n","      FeatureExtractor/MobilenetV1/Conv2d_2_pointwise (--/8.19k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights (1x1x64x128, 8.19k/8.19k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_3_depthwise (--/1.15k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights (3x3x128x1, 1.15k/1.15k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_3_pointwise (--/16.38k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights (1x1x128x128, 16.38k/16.38k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_4_depthwise (--/1.15k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights (3x3x128x1, 1.15k/1.15k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_4_pointwise (--/32.77k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights (1x1x128x256, 32.77k/32.77k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_5_depthwise (--/2.30k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights (3x3x256x1, 2.30k/2.30k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_5_pointwise (--/65.54k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights (1x1x256x256, 65.54k/65.54k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_6_depthwise (--/2.30k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights (3x3x256x1, 2.30k/2.30k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_6_pointwise (--/131.07k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights (1x1x256x512, 131.07k/131.07k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_7_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_7_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_8_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_8_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_9_depthwise (--/4.61k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights (3x3x512x1, 4.61k/4.61k params)\n","      FeatureExtractor/MobilenetV1/Conv2d_9_pointwise (--/262.14k params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm (--/0 params)\n","        FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights (1x1x512x512, 262.14k/262.14k params)\n","\n","======================End of Report==========================\n","108 ops no flops stats due to incomplete shapes.\n","Parsing Inputs...\n","Incomplete shape.\n","\n","=========================Options=============================\n","-max_depth                  10000\n","-min_bytes                  0\n","-min_peak_bytes             0\n","-min_residual_bytes         0\n","-min_output_bytes           0\n","-min_micros                 0\n","-min_accelerator_micros     0\n","-min_cpu_micros             0\n","-min_params                 0\n","-min_float_ops              1\n","-min_occurrence             0\n","-step                       -1\n","-order_by                   float_ops\n","-account_type_regexes       .*\n","-start_name_regexes         .*\n","-trim_name_regexes          .*BatchNorm.*,.*Initializer.*,.*Regularizer.*,.*BiasAdd.*\n","-show_name_regexes          .*\n","-hide_name_regexes          \n","-account_displayed_op_only  true\n","-select                     float_ops\n","-output                     stdout:\n","\n","==================Model Analysis Report======================\n","Incomplete shape.\n","\n","Doc:\n","scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.\n","flops: Number of float operations. Note: Please read the implementation for the math behind it.\n","\n","Profile:\n","node name | # float_ops\n","_TFProfRoot (--/5.41k flops)\n","  MultipleGridAnchorGenerator/sub (798/798 flops)\n","  MultipleGridAnchorGenerator/mul_20 (798/798 flops)\n","  MultipleGridAnchorGenerator/mul_19 (798/798 flops)\n","  MultipleGridAnchorGenerator/mul_28 (480/480 flops)\n","  MultipleGridAnchorGenerator/sub_1 (480/480 flops)\n","  MultipleGridAnchorGenerator/mul_27 (480/480 flops)\n","  MultipleGridAnchorGenerator/mul_21 (399/399 flops)\n","  MultipleGridAnchorGenerator/mul_29 (240/240 flops)\n","  MultipleGridAnchorGenerator/mul_35 (120/120 flops)\n","  MultipleGridAnchorGenerator/mul_36 (120/120 flops)\n","  MultipleGridAnchorGenerator/sub_2 (120/120 flops)\n","  MultipleGridAnchorGenerator/mul_37 (60/60 flops)\n","  MultipleGridAnchorGenerator/mul_44 (36/36 flops)\n","  MultipleGridAnchorGenerator/mul_43 (36/36 flops)\n","  MultipleGridAnchorGenerator/sub_3 (36/36 flops)\n","  MultipleGridAnchorGenerator/mul_52 (24/24 flops)\n","  MultipleGridAnchorGenerator/mul_51 (24/24 flops)\n","  MultipleGridAnchorGenerator/sub_4 (24/24 flops)\n","  MultipleGridAnchorGenerator/mul_18 (19/19 flops)\n","  MultipleGridAnchorGenerator/mul_45 (18/18 flops)\n","  MultipleGridAnchorGenerator/mul_60 (12/12 flops)\n","  MultipleGridAnchorGenerator/mul_53 (12/12 flops)\n","  MultipleGridAnchorGenerator/sub_5 (12/12 flops)\n","  MultipleGridAnchorGenerator/mul_59 (12/12 flops)\n","  MultipleGridAnchorGenerator/mul_26 (10/10 flops)\n","  MultipleGridAnchorGenerator/mul_17 (7/7 flops)\n","  MultipleGridAnchorGenerator/truediv_16 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_31 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_40 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_46 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_47 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_48 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_17 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_61 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_54 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_55 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_56 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_39 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_18 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_22 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_23 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_24 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_30 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_32 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_19 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_38 (6/6 flops)\n","  MultipleGridAnchorGenerator/truediv_15 (6/6 flops)\n","  MultipleGridAnchorGenerator/mul_34 (5/5 flops)\n","  MultipleGridAnchorGenerator/mul_25 (4/4 flops)\n","  MultipleGridAnchorGenerator/mul_42 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_16 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_15 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_14 (3/3 flops)\n","  MultipleGridAnchorGenerator/truediv_14 (3/3 flops)\n","  MultipleGridAnchorGenerator/mul_33 (2/2 flops)\n","  MultipleGridAnchorGenerator/mul_50 (2/2 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_3 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_8 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_9 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_7 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_6 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_5 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_4 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_2 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Equal (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Equal (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1 (1/1 flops)\n","  Preprocessor/map/while/Less_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_19 (1/1 flops)\n","  MultipleGridAnchorGenerator/Minimum (1/1 flops)\n","  Preprocessor/map/while/Less (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/ones/Less (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_9 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_8 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_7 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_6 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_5 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_4 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_3 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_2 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_18 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_17 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_16 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_15 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_14 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_13 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_12 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_11 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_10 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_1 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_4 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_9 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_8 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_7 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_6 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_58 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_57 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_5 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_49 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_41 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_3 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_2 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_13 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_12 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_11 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_10 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul_1 (1/1 flops)\n","  MultipleGridAnchorGenerator/mul (1/1 flops)\n","  MultipleGridAnchorGenerator/assert_equal_1/Equal (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_6 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less_1 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_9 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_8 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_7 (1/1 flops)\n","  Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Greater (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_5 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_4 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_3 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_2 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_13 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_12 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_11 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_10 (1/1 flops)\n","  MultipleGridAnchorGenerator/truediv_1 (1/1 flops)\n","\n","======================End of Report==========================\n","2020-07-14 20:39:11.706374: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1\n","2020-07-14 20:39:11.709394: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.709949: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:39:11.710249: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:39:11.712094: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:39:11.713768: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:39:11.714131: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:39:11.716069: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:39:11.717104: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:39:11.721039: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:39:11.721241: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.721900: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.722427: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:39:11.728394: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2300000000 Hz\n","2020-07-14 20:39:11.728645: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x31479c0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\n","2020-07-14 20:39:11.728683: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\n","2020-07-14 20:39:11.773245: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.773907: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x3147800 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n","2020-07-14 20:39:11.773952: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla K80, Compute Capability 3.7\n","2020-07-14 20:39:11.774215: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.774761: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:39:11.774837: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:39:11.774880: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:39:11.774923: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:39:11.774965: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:39:11.775014: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:39:11.775081: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:39:11.775126: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:39:11.775258: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.775856: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.776385: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:39:11.776467: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:39:11.777888: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:39:11.777922: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:39:11.777941: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:39:11.778149: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.778766: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:11.779324: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\n","2020-07-14 20:39:11.779374: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-16000\n","I0714 20:39:11.782581 140384994174848 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-16000\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:127: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use standard file APIs to check for files with this prefix.\n","W0714 20:39:13.195994 140384994174848 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:127: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use standard file APIs to check for files with this prefix.\n","2020-07-14 20:39:13.880853: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:13.881469: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:39:13.881557: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:39:13.881601: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:39:13.881646: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:39:13.881686: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:39:13.881729: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:39:13.881768: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:39:13.881806: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:39:13.881941: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:13.882552: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:13.883043: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:39:13.883105: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:39:13.883128: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:39:13.883142: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:39:13.883290: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:13.883880: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:13.884397: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","INFO:tensorflow:Restoring parameters from data_one/output/model.ckpt-16000\n","I0714 20:39:13.886379 140384994174848 saver.py:1284] Restoring parameters from data_one/output/model.ckpt-16000\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:233: convert_variables_to_constants (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.convert_variables_to_constants`\n","W0714 20:39:14.387088 140384994174848 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/tools/freeze_graph.py:233: convert_variables_to_constants (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.convert_variables_to_constants`\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/framework/graph_util_impl.py:277: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.extract_sub_graph`\n","W0714 20:39:14.387391 140384994174848 deprecation.py:323] From /tensorflow-1.15.2/python3.6/tensorflow_core/python/framework/graph_util_impl.py:277: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.graph_util.extract_sub_graph`\n","INFO:tensorflow:Froze 199 variables.\n","I0714 20:39:14.670115 140384994174848 graph_util_impl.py:334] Froze 199 variables.\n","INFO:tensorflow:Converted 199 variables to const ops.\n","I0714 20:39:14.770758 140384994174848 graph_util_impl.py:394] Converted 199 variables to const ops.\n","2020-07-14 20:39:14.935184: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:14.935782: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: \n","name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\n","pciBusID: 0000:00:04.0\n","2020-07-14 20:39:14.935881: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-14 20:39:14.935925: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-14 20:39:14.935977: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-14 20:39:14.936020: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-14 20:39:14.936103: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-14 20:39:14.936155: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-14 20:39:14.936201: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-14 20:39:14.936369: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:14.936969: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:14.937493: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0\n","2020-07-14 20:39:14.937543: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-14 20:39:14.937567: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 \n","2020-07-14 20:39:14.937581: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N \n","2020-07-14 20:39:14.937731: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:14.938333: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:983] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-14 20:39:14.938840: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6337 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)\n","WARNING:tensorflow:From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:384: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.\n","W0714 20:39:15.342396 140384994174848 deprecation.py:323] From /content/drive/My Drive/tf_od_demo/models/research/object_detection/exporter.py:384: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.\n","INFO:tensorflow:No assets to save.\n","I0714 20:39:15.343287 140384994174848 builder_impl.py:640] No assets to save.\n","INFO:tensorflow:No assets to write.\n","I0714 20:39:15.343451 140384994174848 builder_impl.py:460] No assets to write.\n","INFO:tensorflow:SavedModel written to: data_one/output/frozen/saved_model/saved_model.pb\n","I0714 20:39:15.661720 140384994174848 builder_impl.py:425] SavedModel written to: data_one/output/frozen/saved_model/saved_model.pb\n","INFO:tensorflow:Writing pipeline config file to data_one/output/frozen/pipeline.config\n","I0714 20:39:15.683913 140384994174848 config_util.py:254] Writing pipeline config file to data_one/output/frozen/pipeline.config\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EKyz7f6dz4gt","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594759171677,"user_tz":-180,"elapsed":918,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["PATH_TO_LABELS = 'data_one/box_label_map.pbtxt'\n","\n","category_index = label_map_util.create_category_index_from_labelmap(PATH_TO_LABELS, use_display_name=True)"],"execution_count":54,"outputs":[]},{"cell_type":"code","metadata":{"id":"DWJFMBCBMKxA","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594759173990,"user_tz":-180,"elapsed":1533,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["PATH_TO_FROZEN_GRAPH = 'data_one/output/frozen/frozen_inference_graph.pb'\n","\n","detection_graph = tf.Graph()\n","with detection_graph.as_default():\n","    od_graph_def = tf.GraphDef()\n","    with tf.gfile.GFile(PATH_TO_FROZEN_GRAPH, 'rb') as fid:\n","        serialized_graph = fid.read()\n","        od_graph_def.ParseFromString(serialized_graph)\n","        tf.import_graph_def(od_graph_def, name='')"],"execution_count":55,"outputs":[]},{"cell_type":"code","metadata":{"id":"atA4GmL5MSse","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594759175677,"user_tz":-180,"elapsed":659,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["def run_inference_for_single_image(image, graph):\n","    with graph.as_default():\n","        with tf.Session() as sess:\n","            # Get handles to input and output tensors\n","            ops = tf.get_default_graph().get_operations()\n","            all_tensor_names = {output.name for op in ops for output in op.outputs}\n","            tensor_dict = {}\n","            for key in [\n","                'num_detections', 'detection_boxes', 'detection_scores',\n","                'detection_classes', 'detection_masks'\n","            ]:\n","                tensor_name = key + ':0'\n","                if tensor_name in all_tensor_names:\n","                    tensor_dict[key] = tf.get_default_graph().get_tensor_by_name(tensor_name)\n","            if 'detection_masks' in tensor_dict:\n","                # The following processing is only for single image\n","                detection_boxes = tf.squeeze(tensor_dict['detection_boxes'], [0])\n","                detection_masks = tf.squeeze(tensor_dict['detection_masks'], [0])\n","                # Reframe is required to translate mask from box coordinates to image coordinates and fit the image size.\n","                real_num_detection = tf.cast(tensor_dict['num_detections'][0], tf.int32)\n","                detection_boxes = tf.slice(detection_boxes, [0, 0], [real_num_detection, -1])\n","                detection_masks = tf.slice(detection_masks, [0, 0, 0], [real_num_detection, -1, -1])\n","                detection_masks_reframed = utils_ops.reframe_box_masks_to_image_masks(\n","                    detection_masks, detection_boxes, image.shape[1], image.shape[2])\n","                detection_masks_reframed = tf.cast(tf.greater(detection_masks_reframed, 0.5), tf.uint8)\n","                # Follow the convention by adding back the batch dimension\n","                tensor_dict['detection_masks'] = tf.expand_dims(detection_masks_reframed, 0)\n","            image_tensor = tf.get_default_graph().get_tensor_by_name('image_tensor:0')\n","\n","            # Run inference\n","            output_dict = sess.run(tensor_dict, feed_dict={image_tensor: image})\n","\n","            # all outputs are float32 numpy arrays, so convert types as appropriate\n","            output_dict['num_detections'] = int(output_dict['num_detections'][0])\n","            output_dict['detection_classes'] = output_dict[ 'detection_classes'][0].astype(np.uint8)\n","            output_dict['detection_boxes'] = output_dict['detection_boxes'][0]\n","            output_dict['detection_scores'] = output_dict['detection_scores'][0]\n","            if 'detection_masks' in output_dict:\n","                output_dict['detection_masks'] = output_dict['detection_masks'][0]\n","    return output_dict"],"execution_count":56,"outputs":[]},{"cell_type":"code","metadata":{"id":"vLOY_8ibMf7l","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594759183945,"user_tz":-180,"elapsed":1616,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}}},"source":["image_np = imageio.imread('data_one/test_1.jpg')\n","image_np_expanded = np.expand_dims(image_np, axis=0)\n","\n","output_dict = run_inference_for_single_image(image_np_expanded, detection_graph)"],"execution_count":57,"outputs":[]},{"cell_type":"code","metadata":{"id":"U6vqv8AZxNGL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":884},"executionInfo":{"status":"ok","timestamp":1594759204165,"user_tz":-180,"elapsed":4007,"user":{"displayName":"Анастасия Качнова","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjUnFc0yP7rpNeYdnqx-mUT1k35go0H7SyCHJN-=s64","userId":"07195005050436518108"}},"outputId":"2c360809-ff91-4206-ee7e-948dfa1e735e"},"source":["vis_util.visualize_boxes_and_labels_on_image_array(\n","    image_np,\n","    output_dict['detection_boxes'],\n","    output_dict['detection_classes'],\n","    output_dict['detection_scores'],\n","    category_index,\n","    instance_masks=output_dict.get('detection_masks'),\n","    use_normalized_coordinates=True,\n","    line_thickness=6,\n","    min_score_thresh=0.9)\n","\n","%matplotlib inline\n","plt.figure(figsize=(15,15))\n","plt.imshow(image_np)"],"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fa60439d0b8>"]},"metadata":{"tags":[]},"execution_count":59},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x1080 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}